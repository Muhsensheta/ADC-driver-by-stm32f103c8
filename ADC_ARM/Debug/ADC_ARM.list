
ADC_ARM.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001288  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080013b8  080013c0  000113c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080013b8  080013b8  000113c0  2**0
                  CONTENTS
  4 .ARM          00000000  080013b8  080013b8  000113c0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080013b8  080013c0  000113c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080013b8  080013b8  000113b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080013bc  080013bc  000113bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000113c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000000  080013c0  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000030  080013c0  00020030  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000113c0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001099  00000000  00000000  000113e9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000855  00000000  00000000  00012482  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000278  00000000  00000000  00012cd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000001e0  00000000  00000000  00012f50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001185  00000000  00000000  00013130  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000f09  00000000  00000000  000142b5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00004545  00000000  00000000  000151be  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00019703  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000077c  00000000  00000000  00019754  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	080013a0 	.word	0x080013a0

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	080013a0 	.word	0x080013a0

08000170 <main>:


u16 global_u16Reading;

int main(void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0
	/******************* Initialization ********************/

	// System Clk init
	MRCC_voidSysClkInit();
 8000174:	f000 fbf6 	bl	8000964 <MRCC_voidSysClkInit>

	// Enable Per Clk "RCC" -> DIO_A , DIO_C, DIO_B
	MRCC_voidEnablePerClk(RCC_APB2,2);
 8000178:	2102      	movs	r1, #2
 800017a:	2002      	movs	r0, #2
 800017c:	f000 fc0e 	bl	800099c <MRCC_voidEnablePerClk>
	MRCC_voidEnablePerClk(RCC_APB2,4);
 8000180:	2104      	movs	r1, #4
 8000182:	2002      	movs	r0, #2
 8000184:	f000 fc0a 	bl	800099c <MRCC_voidEnablePerClk>
	MRCC_voidEnablePerClk(RCC_APB2,3);
 8000188:	2103      	movs	r1, #3
 800018a:	2002      	movs	r0, #2
 800018c:	f000 fc06 	bl	800099c <MRCC_voidEnablePerClk>


	// Set ADC Prescaler
	MRCC_voidSetADCPre(RCC_ADC_PRE_2);
 8000190:	2000      	movs	r0, #0
 8000192:	f000 fc45 	bl	8000a20 <MRCC_voidSetADCPre>

	// Enable Per Clk "RCC" -> ADC -> 9
	MRCC_voidEnablePerClk(RCC_APB2,9);
 8000196:	2109      	movs	r1, #9
 8000198:	2002      	movs	r0, #2
 800019a:	f000 fbff 	bl	800099c <MRCC_voidEnablePerClk>

	// Set Direction for ADC channel_0 as IN_ANALOG
	M_GPIO_void_SetPinDir(PORTA_ID, PIN0_ID, IN_ANALOG);
 800019e:	2200      	movs	r2, #0
 80001a0:	2100      	movs	r1, #0
 80001a2:	2000      	movs	r0, #0
 80001a4:	f000 f988 	bl	80004b8 <M_GPIO_void_SetPinDir>
   // M_GPIO_void_SetPinValue(PORTA_ID, PIN0_ID, HIGH);
	// Initialize ADC
	ADC_void_init();
 80001a8:	f000 f906 	bl	80003b8 <ADC_void_init>

	// Initialize LCD
	H_LCD_void_Init();
 80001ac:	f000 fade 	bl	800076c <H_LCD_void_Init>
	H_SSD_void_init();
 80001b0:	f000 fc5a 	bl	8000a68 <H_SSD_void_init>

	// SET LEDs direction
	M_GPIO_void_SetPinDir(PORTB_ID, PIN0_ID, OUT_10MHZ_PP);
 80001b4:	2201      	movs	r2, #1
 80001b6:	2100      	movs	r1, #0
 80001b8:	2001      	movs	r0, #1
 80001ba:	f000 f97d 	bl	80004b8 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(PORTB_ID, PIN1_ID, OUT_10MHZ_PP);
 80001be:	2201      	movs	r2, #1
 80001c0:	2101      	movs	r1, #1
 80001c2:	2001      	movs	r0, #1
 80001c4:	f000 f978 	bl	80004b8 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(PORTC_ID, PIN13_ID, OUT_10MHZ_PP);
 80001c8:	2201      	movs	r2, #1
 80001ca:	210d      	movs	r1, #13
 80001cc:	2002      	movs	r0, #2
 80001ce:	f000 f973 	bl	80004b8 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(PORTC_ID, PIN14_ID, OUT_10MHZ_PP);
 80001d2:	2201      	movs	r2, #1
 80001d4:	210e      	movs	r1, #14
 80001d6:	2002      	movs	r0, #2
 80001d8:	f000 f96e 	bl	80004b8 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(PORTC_ID, PIN15_ID, OUT_10MHZ_PP);
 80001dc:	2201      	movs	r2, #1
 80001de:	210f      	movs	r1, #15
 80001e0:	2002      	movs	r0, #2
 80001e2:	f000 f969 	bl	80004b8 <M_GPIO_void_SetPinDir>

		//H_LCD_void_gotXY(0,1);
		//H_LCD_void_sendString("ADC Value =");

		//H_LCD_void_gotXY(1,6);
		global_u16Reading = ADC_u16_read(CHANNEL_0);
 80001e6:	2000      	movs	r0, #0
 80001e8:	f000 f928 	bl	800043c <ADC_u16_read>
 80001ec:	4603      	mov	r3, r0
 80001ee:	461a      	mov	r2, r3
 80001f0:	4b63      	ldr	r3, [pc, #396]	; (8000380 <main+0x210>)
 80001f2:	801a      	strh	r2, [r3, #0]
		H_SSD_void_DisplayNumber(global_u16Reading);
 80001f4:	4b62      	ldr	r3, [pc, #392]	; (8000380 <main+0x210>)
 80001f6:	881b      	ldrh	r3, [r3, #0]
 80001f8:	b2db      	uxtb	r3, r3
 80001fa:	4618      	mov	r0, r3
 80001fc:	f000 fc74 	bl	8000ae8 <H_SSD_void_DisplayNumber>
		STK_voidBusyWait(1000);
 8000200:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000204:	f001 f826 	bl	8001254 <STK_voidBusyWait>

		if(global_u16Reading < 50)
 8000208:	4b5d      	ldr	r3, [pc, #372]	; (8000380 <main+0x210>)
 800020a:	881b      	ldrh	r3, [r3, #0]
 800020c:	2b31      	cmp	r3, #49	; 0x31
 800020e:	d819      	bhi.n	8000244 <main+0xd4>
		{
			M_GPIO_void_SetPinValue(PORTB_ID, PIN0_ID,  LOW);
 8000210:	2200      	movs	r2, #0
 8000212:	2100      	movs	r1, #0
 8000214:	2001      	movs	r0, #1
 8000216:	f000 fa25 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTB_ID, PIN1_ID,  LOW);
 800021a:	2200      	movs	r2, #0
 800021c:	2101      	movs	r1, #1
 800021e:	2001      	movs	r0, #1
 8000220:	f000 fa20 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN13_ID, HIGH);
 8000224:	2201      	movs	r2, #1
 8000226:	210d      	movs	r1, #13
 8000228:	2002      	movs	r0, #2
 800022a:	f000 fa1b 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN14_ID, HIGH);
 800022e:	2201      	movs	r2, #1
 8000230:	210e      	movs	r1, #14
 8000232:	2002      	movs	r0, #2
 8000234:	f000 fa16 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN15_ID, HIGH);
 8000238:	2201      	movs	r2, #1
 800023a:	210f      	movs	r1, #15
 800023c:	2002      	movs	r0, #2
 800023e:	f000 fa11 	bl	8000664 <M_GPIO_void_SetPinValue>
 8000242:	e098      	b.n	8000376 <main+0x206>


		}
		else if(global_u16Reading < 100)
 8000244:	4b4e      	ldr	r3, [pc, #312]	; (8000380 <main+0x210>)
 8000246:	881b      	ldrh	r3, [r3, #0]
 8000248:	2b63      	cmp	r3, #99	; 0x63
 800024a:	d819      	bhi.n	8000280 <main+0x110>
		{
			M_GPIO_void_SetPinValue(PORTB_ID, PIN0_ID,  LOW);
 800024c:	2200      	movs	r2, #0
 800024e:	2100      	movs	r1, #0
 8000250:	2001      	movs	r0, #1
 8000252:	f000 fa07 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTB_ID, PIN1_ID,  HIGH);
 8000256:	2201      	movs	r2, #1
 8000258:	2101      	movs	r1, #1
 800025a:	2001      	movs	r0, #1
 800025c:	f000 fa02 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN13_ID, HIGH);
 8000260:	2201      	movs	r2, #1
 8000262:	210d      	movs	r1, #13
 8000264:	2002      	movs	r0, #2
 8000266:	f000 f9fd 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN14_ID, HIGH);
 800026a:	2201      	movs	r2, #1
 800026c:	210e      	movs	r1, #14
 800026e:	2002      	movs	r0, #2
 8000270:	f000 f9f8 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN15_ID, HIGH);
 8000274:	2201      	movs	r2, #1
 8000276:	210f      	movs	r1, #15
 8000278:	2002      	movs	r0, #2
 800027a:	f000 f9f3 	bl	8000664 <M_GPIO_void_SetPinValue>
 800027e:	e07a      	b.n	8000376 <main+0x206>

		}
		else if(global_u16Reading < 400)
 8000280:	4b3f      	ldr	r3, [pc, #252]	; (8000380 <main+0x210>)
 8000282:	881b      	ldrh	r3, [r3, #0]
 8000284:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8000288:	d219      	bcs.n	80002be <main+0x14e>
		{
			M_GPIO_void_SetPinValue(PORTB_ID, PIN0_ID,  HIGH);
 800028a:	2201      	movs	r2, #1
 800028c:	2100      	movs	r1, #0
 800028e:	2001      	movs	r0, #1
 8000290:	f000 f9e8 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTB_ID, PIN1_ID,  LOW);
 8000294:	2200      	movs	r2, #0
 8000296:	2101      	movs	r1, #1
 8000298:	2001      	movs	r0, #1
 800029a:	f000 f9e3 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN13_ID, HIGH);
 800029e:	2201      	movs	r2, #1
 80002a0:	210d      	movs	r1, #13
 80002a2:	2002      	movs	r0, #2
 80002a4:	f000 f9de 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN14_ID, HIGH);
 80002a8:	2201      	movs	r2, #1
 80002aa:	210e      	movs	r1, #14
 80002ac:	2002      	movs	r0, #2
 80002ae:	f000 f9d9 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN15_ID, HIGH);
 80002b2:	2201      	movs	r2, #1
 80002b4:	210f      	movs	r1, #15
 80002b6:	2002      	movs	r0, #2
 80002b8:	f000 f9d4 	bl	8000664 <M_GPIO_void_SetPinValue>
 80002bc:	e05b      	b.n	8000376 <main+0x206>


		}
		else if(global_u16Reading < 600)
 80002be:	4b30      	ldr	r3, [pc, #192]	; (8000380 <main+0x210>)
 80002c0:	881b      	ldrh	r3, [r3, #0]
 80002c2:	f5b3 7f16 	cmp.w	r3, #600	; 0x258
 80002c6:	d219      	bcs.n	80002fc <main+0x18c>
		{
			M_GPIO_void_SetPinValue(PORTB_ID, PIN0_ID,  HIGH);
 80002c8:	2201      	movs	r2, #1
 80002ca:	2100      	movs	r1, #0
 80002cc:	2001      	movs	r0, #1
 80002ce:	f000 f9c9 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTB_ID, PIN1_ID,  HIGH);
 80002d2:	2201      	movs	r2, #1
 80002d4:	2101      	movs	r1, #1
 80002d6:	2001      	movs	r0, #1
 80002d8:	f000 f9c4 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN13_ID, LOW);
 80002dc:	2200      	movs	r2, #0
 80002de:	210d      	movs	r1, #13
 80002e0:	2002      	movs	r0, #2
 80002e2:	f000 f9bf 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN14_ID, HIGH);
 80002e6:	2201      	movs	r2, #1
 80002e8:	210e      	movs	r1, #14
 80002ea:	2002      	movs	r0, #2
 80002ec:	f000 f9ba 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN15_ID, HIGH);
 80002f0:	2201      	movs	r2, #1
 80002f2:	210f      	movs	r1, #15
 80002f4:	2002      	movs	r0, #2
 80002f6:	f000 f9b5 	bl	8000664 <M_GPIO_void_SetPinValue>
 80002fa:	e03c      	b.n	8000376 <main+0x206>


		}
		else if(global_u16Reading < 800)
 80002fc:	4b20      	ldr	r3, [pc, #128]	; (8000380 <main+0x210>)
 80002fe:	881b      	ldrh	r3, [r3, #0]
 8000300:	f5b3 7f48 	cmp.w	r3, #800	; 0x320
 8000304:	d219      	bcs.n	800033a <main+0x1ca>
		{
			M_GPIO_void_SetPinValue(PORTB_ID, PIN0_ID,  HIGH);
 8000306:	2201      	movs	r2, #1
 8000308:	2100      	movs	r1, #0
 800030a:	2001      	movs	r0, #1
 800030c:	f000 f9aa 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTB_ID, PIN1_ID,  HIGH);
 8000310:	2201      	movs	r2, #1
 8000312:	2101      	movs	r1, #1
 8000314:	2001      	movs	r0, #1
 8000316:	f000 f9a5 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN13_ID, HIGH);
 800031a:	2201      	movs	r2, #1
 800031c:	210d      	movs	r1, #13
 800031e:	2002      	movs	r0, #2
 8000320:	f000 f9a0 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN14_ID, LOW);
 8000324:	2200      	movs	r2, #0
 8000326:	210e      	movs	r1, #14
 8000328:	2002      	movs	r0, #2
 800032a:	f000 f99b 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN15_ID, HIGH);
 800032e:	2201      	movs	r2, #1
 8000330:	210f      	movs	r1, #15
 8000332:	2002      	movs	r0, #2
 8000334:	f000 f996 	bl	8000664 <M_GPIO_void_SetPinValue>
 8000338:	e01d      	b.n	8000376 <main+0x206>


		}
		else if(global_u16Reading < 1024)
 800033a:	4b11      	ldr	r3, [pc, #68]	; (8000380 <main+0x210>)
 800033c:	881b      	ldrh	r3, [r3, #0]
 800033e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000342:	d218      	bcs.n	8000376 <main+0x206>
		{
			M_GPIO_void_SetPinValue(PORTB_ID, PIN0_ID,  HIGH);
 8000344:	2201      	movs	r2, #1
 8000346:	2100      	movs	r1, #0
 8000348:	2001      	movs	r0, #1
 800034a:	f000 f98b 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTB_ID, PIN1_ID,  HIGH);
 800034e:	2201      	movs	r2, #1
 8000350:	2101      	movs	r1, #1
 8000352:	2001      	movs	r0, #1
 8000354:	f000 f986 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN13_ID, HIGH);
 8000358:	2201      	movs	r2, #1
 800035a:	210d      	movs	r1, #13
 800035c:	2002      	movs	r0, #2
 800035e:	f000 f981 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN14_ID, HIGH);
 8000362:	2201      	movs	r2, #1
 8000364:	210e      	movs	r1, #14
 8000366:	2002      	movs	r0, #2
 8000368:	f000 f97c 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(PORTC_ID, PIN15_ID, LOW);
 800036c:	2200      	movs	r2, #0
 800036e:	210f      	movs	r1, #15
 8000370:	2002      	movs	r0, #2
 8000372:	f000 f977 	bl	8000664 <M_GPIO_void_SetPinValue>


		}
		_delay_ms(250);
 8000376:	20fa      	movs	r0, #250	; 0xfa
 8000378:	f000 f804 	bl	8000384 <_delay_ms>
		global_u16Reading = ADC_u16_read(CHANNEL_0);
 800037c:	e733      	b.n	80001e6 <main+0x76>
 800037e:	bf00      	nop
 8000380:	2000001c 	.word	0x2000001c

08000384 <_delay_ms>:
#include  "ADC_config.h"
#include  "ADC_init.h"


void	_delay_ms(u32 _ms)
{
 8000384:	b480      	push	{r7}
 8000386:	b085      	sub	sp, #20
 8000388:	af00      	add	r7, sp, #0
 800038a:	6078      	str	r0, [r7, #4]
	for(u32 i = 0; i < (_ms * 500) ; i++)
 800038c:	2300      	movs	r3, #0
 800038e:	60fb      	str	r3, [r7, #12]
 8000390:	e003      	b.n	800039a <_delay_ms+0x16>
	{
		asm("NOP");
 8000392:	bf00      	nop
	for(u32 i = 0; i < (_ms * 500) ; i++)
 8000394:	68fb      	ldr	r3, [r7, #12]
 8000396:	3301      	adds	r3, #1
 8000398:	60fb      	str	r3, [r7, #12]
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 80003a0:	fb02 f303 	mul.w	r3, r2, r3
 80003a4:	68fa      	ldr	r2, [r7, #12]
 80003a6:	429a      	cmp	r2, r3
 80003a8:	d3f3      	bcc.n	8000392 <_delay_ms+0xe>
	}
}
 80003aa:	bf00      	nop
 80003ac:	bf00      	nop
 80003ae:	3714      	adds	r7, #20
 80003b0:	46bd      	mov	sp, r7
 80003b2:	bc80      	pop	{r7}
 80003b4:	4770      	bx	lr
	...

080003b8 <ADC_void_init>:
void	ADC_void_init	(void)
{
 80003b8:	b580      	push	{r7, lr}
 80003ba:	af00      	add	r7, sp, #0
	// ON ADC -> ADON -> 1
	SET_BIT(ADC->CR2 , 0);
 80003bc:	4b1e      	ldr	r3, [pc, #120]	; (8000438 <ADC_void_init+0x80>)
 80003be:	689b      	ldr	r3, [r3, #8]
 80003c0:	4a1d      	ldr	r2, [pc, #116]	; (8000438 <ADC_void_init+0x80>)
 80003c2:	f043 0301 	orr.w	r3, r3, #1
 80003c6:	6093      	str	r3, [r2, #8]
	_delay_ms(20);
 80003c8:	2014      	movs	r0, #20
 80003ca:	f7ff ffdb 	bl	8000384 <_delay_ms>

	// Set External event select for regular group -> SWSTART -> 111
	SET_BIT(ADC->CR2 , 19);
 80003ce:	4b1a      	ldr	r3, [pc, #104]	; (8000438 <ADC_void_init+0x80>)
 80003d0:	689b      	ldr	r3, [r3, #8]
 80003d2:	4a19      	ldr	r2, [pc, #100]	; (8000438 <ADC_void_init+0x80>)
 80003d4:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80003d8:	6093      	str	r3, [r2, #8]
	SET_BIT(ADC->CR2 , 17);
 80003da:	4b17      	ldr	r3, [pc, #92]	; (8000438 <ADC_void_init+0x80>)
 80003dc:	689b      	ldr	r3, [r3, #8]
 80003de:	4a16      	ldr	r2, [pc, #88]	; (8000438 <ADC_void_init+0x80>)
 80003e0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80003e4:	6093      	str	r3, [r2, #8]
	SET_BIT(ADC->CR2 , 18);
 80003e6:	4b14      	ldr	r3, [pc, #80]	; (8000438 <ADC_void_init+0x80>)
 80003e8:	689b      	ldr	r3, [r3, #8]
 80003ea:	4a13      	ldr	r2, [pc, #76]	; (8000438 <ADC_void_init+0x80>)
 80003ec:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80003f0:	6093      	str	r3, [r2, #8]

	// Set External trigger conversion mode for regular channels
	SET_BIT(ADC->CR2 , 20);
 80003f2:	4b11      	ldr	r3, [pc, #68]	; (8000438 <ADC_void_init+0x80>)
 80003f4:	689b      	ldr	r3, [r3, #8]
 80003f6:	4a10      	ldr	r2, [pc, #64]	; (8000438 <ADC_void_init+0x80>)
 80003f8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80003fc:	6093      	str	r3, [r2, #8]
	// Set  Data alignment -> Right Alignment -> ALIGN > 0
	CLR_BIT(ADC->CR2 , 11);
 80003fe:	4b0e      	ldr	r3, [pc, #56]	; (8000438 <ADC_void_init+0x80>)
 8000400:	689b      	ldr	r3, [r3, #8]
 8000402:	4a0d      	ldr	r2, [pc, #52]	; (8000438 <ADC_void_init+0x80>)
 8000404:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000408:	6093      	str	r3, [r2, #8]
	// Set Single conversion mode -> CONT -> 0
	CLR_BIT(ADC->CR2 , 1);
 800040a:	4b0b      	ldr	r3, [pc, #44]	; (8000438 <ADC_void_init+0x80>)
 800040c:	689b      	ldr	r3, [r3, #8]
 800040e:	4a0a      	ldr	r2, [pc, #40]	; (8000438 <ADC_void_init+0x80>)
 8000410:	f023 0302 	bic.w	r3, r3, #2
 8000414:	6093      	str	r3, [r2, #8]

	// Set Number of Conversion in Regular Mode -> Default -> 1


	// Start Calibration -> CAL -> 1
	SET_BIT(ADC->CR2 , 2);
 8000416:	4b08      	ldr	r3, [pc, #32]	; (8000438 <ADC_void_init+0x80>)
 8000418:	689b      	ldr	r3, [r3, #8]
 800041a:	4a07      	ldr	r2, [pc, #28]	; (8000438 <ADC_void_init+0x80>)
 800041c:	f043 0304 	orr.w	r3, r3, #4
 8000420:	6093      	str	r3, [r2, #8]
	while(GET_BIT(ADC->CR2 , 2) != 0);
 8000422:	bf00      	nop
 8000424:	4b04      	ldr	r3, [pc, #16]	; (8000438 <ADC_void_init+0x80>)
 8000426:	689b      	ldr	r3, [r3, #8]
 8000428:	089b      	lsrs	r3, r3, #2
 800042a:	f003 0301 	and.w	r3, r3, #1
 800042e:	2b00      	cmp	r3, #0
 8000430:	d1f8      	bne.n	8000424 <ADC_void_init+0x6c>

}
 8000432:	bf00      	nop
 8000434:	bf00      	nop
 8000436:	bd80      	pop	{r7, pc}
 8000438:	40012400 	.word	0x40012400

0800043c <ADC_u16_read>:
u16		ADC_u16_read	(Channel_ID Copy_enuChannel)
{
 800043c:	b480      	push	{r7}
 800043e:	b083      	sub	sp, #12
 8000440:	af00      	add	r7, sp, #0
 8000442:	4603      	mov	r3, r0
 8000444:	71fb      	strb	r3, [r7, #7]
	u32 Local_u32Reading;
	// Set Channel
	if(Copy_enuChannel <= CHANNEL_9)
 8000446:	79fb      	ldrb	r3, [r7, #7]
 8000448:	2b09      	cmp	r3, #9
 800044a:	d81d      	bhi.n	8000488 <ADC_u16_read+0x4c>
	{

		//ADC->SQR3 &= 0xfffffff0; // Clear 0 -> 4 bits
		//ADC->SQR3 |= Copy_enuChannel;
		CLR_BIT(ADC->SQR3 , 0);
 800044c:	4b19      	ldr	r3, [pc, #100]	; (80004b4 <ADC_u16_read+0x78>)
 800044e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000450:	4a18      	ldr	r2, [pc, #96]	; (80004b4 <ADC_u16_read+0x78>)
 8000452:	f023 0301 	bic.w	r3, r3, #1
 8000456:	6353      	str	r3, [r2, #52]	; 0x34
		CLR_BIT(ADC->SQR3 , 1);
 8000458:	4b16      	ldr	r3, [pc, #88]	; (80004b4 <ADC_u16_read+0x78>)
 800045a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800045c:	4a15      	ldr	r2, [pc, #84]	; (80004b4 <ADC_u16_read+0x78>)
 800045e:	f023 0302 	bic.w	r3, r3, #2
 8000462:	6353      	str	r3, [r2, #52]	; 0x34
		CLR_BIT(ADC->SQR3 , 2);
 8000464:	4b13      	ldr	r3, [pc, #76]	; (80004b4 <ADC_u16_read+0x78>)
 8000466:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000468:	4a12      	ldr	r2, [pc, #72]	; (80004b4 <ADC_u16_read+0x78>)
 800046a:	f023 0304 	bic.w	r3, r3, #4
 800046e:	6353      	str	r3, [r2, #52]	; 0x34
		CLR_BIT(ADC->SQR3 , 3);
 8000470:	4b10      	ldr	r3, [pc, #64]	; (80004b4 <ADC_u16_read+0x78>)
 8000472:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000474:	4a0f      	ldr	r2, [pc, #60]	; (80004b4 <ADC_u16_read+0x78>)
 8000476:	f023 0308 	bic.w	r3, r3, #8
 800047a:	6353      	str	r3, [r2, #52]	; 0x34
		CLR_BIT(ADC->SQR3 , 4);
 800047c:	4b0d      	ldr	r3, [pc, #52]	; (80004b4 <ADC_u16_read+0x78>)
 800047e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000480:	4a0c      	ldr	r2, [pc, #48]	; (80004b4 <ADC_u16_read+0x78>)
 8000482:	f023 0310 	bic.w	r3, r3, #16
 8000486:	6353      	str	r3, [r2, #52]	; 0x34

	}

	// Start conversion of regular channels -> SWSTART -> 1
	SET_BIT(ADC->CR2 , 22);
 8000488:	4b0a      	ldr	r3, [pc, #40]	; (80004b4 <ADC_u16_read+0x78>)
 800048a:	689b      	ldr	r3, [r3, #8]
 800048c:	4a09      	ldr	r2, [pc, #36]	; (80004b4 <ADC_u16_read+0x78>)
 800048e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000492:	6093      	str	r3, [r2, #8]
	// Wait until the end of conversion -> SWSTART -> 0
	//while(GET_BIT(ADC->CR2 , 22) == 1);

	while(GET_BIT(ADC->SR , 1) != 1);
 8000494:	bf00      	nop
 8000496:	4b07      	ldr	r3, [pc, #28]	; (80004b4 <ADC_u16_read+0x78>)
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	085b      	lsrs	r3, r3, #1
 800049c:	f003 0301 	and.w	r3, r3, #1
 80004a0:	2b01      	cmp	r3, #1
 80004a2:	d1f8      	bne.n	8000496 <ADC_u16_read+0x5a>
	while(GET_BIT(ADC->SR , 1) != 1);
*/
	// Get data -> 0 -> 15
//	Local_u32Reading = (ADC->DR) & 0x0000ffff;
	// Return Data
	return ADC->DR;
 80004a4:	4b03      	ldr	r3, [pc, #12]	; (80004b4 <ADC_u16_read+0x78>)
 80004a6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80004a8:	b29b      	uxth	r3, r3
}
 80004aa:	4618      	mov	r0, r3
 80004ac:	370c      	adds	r7, #12
 80004ae:	46bd      	mov	sp, r7
 80004b0:	bc80      	pop	{r7}
 80004b2:	4770      	bx	lr
 80004b4:	40012400 	.word	0x40012400

080004b8 <M_GPIO_void_SetPinDir>:

#include "DIO_priv.h"
#include "DIO_int.h"

void M_GPIO_void_SetPinDir(u8 PortID , u8 PinID , u8 Dir)
{
 80004b8:	b480      	push	{r7}
 80004ba:	b083      	sub	sp, #12
 80004bc:	af00      	add	r7, sp, #0
 80004be:	4603      	mov	r3, r0
 80004c0:	71fb      	strb	r3, [r7, #7]
 80004c2:	460b      	mov	r3, r1
 80004c4:	71bb      	strb	r3, [r7, #6]
 80004c6:	4613      	mov	r3, r2
 80004c8:	717b      	strb	r3, [r7, #5]
	//Range Check
if(PortID < 3 && PinID < 16 && Dir < 16)
 80004ca:	79fb      	ldrb	r3, [r7, #7]
 80004cc:	2b02      	cmp	r3, #2
 80004ce:	f200 80b6 	bhi.w	800063e <M_GPIO_void_SetPinDir+0x186>
 80004d2:	79bb      	ldrb	r3, [r7, #6]
 80004d4:	2b0f      	cmp	r3, #15
 80004d6:	f200 80b2 	bhi.w	800063e <M_GPIO_void_SetPinDir+0x186>
 80004da:	797b      	ldrb	r3, [r7, #5]
 80004dc:	2b0f      	cmp	r3, #15
 80004de:	f200 80ae 	bhi.w	800063e <M_GPIO_void_SetPinDir+0x186>
{
	if(PinID < 8) /*PIN0 : PIN7 --> CRL*/
 80004e2:	79bb      	ldrb	r3, [r7, #6]
 80004e4:	2b07      	cmp	r3, #7
 80004e6:	d852      	bhi.n	800058e <M_GPIO_void_SetPinDir+0xd6>
	{
		switch(PortID)
 80004e8:	79fb      	ldrb	r3, [r7, #7]
 80004ea:	2b02      	cmp	r3, #2
 80004ec:	d037      	beq.n	800055e <M_GPIO_void_SetPinDir+0xa6>
 80004ee:	2b02      	cmp	r3, #2
 80004f0:	f300 80a6 	bgt.w	8000640 <M_GPIO_void_SetPinDir+0x188>
 80004f4:	2b00      	cmp	r3, #0
 80004f6:	d002      	beq.n	80004fe <M_GPIO_void_SetPinDir+0x46>
 80004f8:	2b01      	cmp	r3, #1
 80004fa:	d018      	beq.n	800052e <M_GPIO_void_SetPinDir+0x76>
			GPIOC_CRH |=  ((Dir)<<(PinID * 4)); //Assign The 4 Bits
			break;
		}
	}
	}
}
 80004fc:	e0a0      	b.n	8000640 <M_GPIO_void_SetPinDir+0x188>
			GPIOA_CRL &= ~(0b1111<<(PinID * 4)); //Clear the 4 Bits
 80004fe:	4b53      	ldr	r3, [pc, #332]	; (800064c <M_GPIO_void_SetPinDir+0x194>)
 8000500:	681b      	ldr	r3, [r3, #0]
 8000502:	79ba      	ldrb	r2, [r7, #6]
 8000504:	0092      	lsls	r2, r2, #2
 8000506:	210f      	movs	r1, #15
 8000508:	fa01 f202 	lsl.w	r2, r1, r2
 800050c:	43d2      	mvns	r2, r2
 800050e:	4611      	mov	r1, r2
 8000510:	4a4e      	ldr	r2, [pc, #312]	; (800064c <M_GPIO_void_SetPinDir+0x194>)
 8000512:	400b      	ands	r3, r1
 8000514:	6013      	str	r3, [r2, #0]
			GPIOA_CRL |=  ((Dir)<<(PinID * 4)); //Assign The 4 Bits
 8000516:	4b4d      	ldr	r3, [pc, #308]	; (800064c <M_GPIO_void_SetPinDir+0x194>)
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	7979      	ldrb	r1, [r7, #5]
 800051c:	79ba      	ldrb	r2, [r7, #6]
 800051e:	0092      	lsls	r2, r2, #2
 8000520:	fa01 f202 	lsl.w	r2, r1, r2
 8000524:	4611      	mov	r1, r2
 8000526:	4a49      	ldr	r2, [pc, #292]	; (800064c <M_GPIO_void_SetPinDir+0x194>)
 8000528:	430b      	orrs	r3, r1
 800052a:	6013      	str	r3, [r2, #0]
			break;
 800052c:	e088      	b.n	8000640 <M_GPIO_void_SetPinDir+0x188>
			GPIOB_CRL &= ~(0b1111<<(PinID * 4)); //Clear the 4 Bits
 800052e:	4b48      	ldr	r3, [pc, #288]	; (8000650 <M_GPIO_void_SetPinDir+0x198>)
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	79ba      	ldrb	r2, [r7, #6]
 8000534:	0092      	lsls	r2, r2, #2
 8000536:	210f      	movs	r1, #15
 8000538:	fa01 f202 	lsl.w	r2, r1, r2
 800053c:	43d2      	mvns	r2, r2
 800053e:	4611      	mov	r1, r2
 8000540:	4a43      	ldr	r2, [pc, #268]	; (8000650 <M_GPIO_void_SetPinDir+0x198>)
 8000542:	400b      	ands	r3, r1
 8000544:	6013      	str	r3, [r2, #0]
			GPIOB_CRL |=  ((Dir)<<(PinID * 4)); //Assign The 4 Bits
 8000546:	4b42      	ldr	r3, [pc, #264]	; (8000650 <M_GPIO_void_SetPinDir+0x198>)
 8000548:	681b      	ldr	r3, [r3, #0]
 800054a:	7979      	ldrb	r1, [r7, #5]
 800054c:	79ba      	ldrb	r2, [r7, #6]
 800054e:	0092      	lsls	r2, r2, #2
 8000550:	fa01 f202 	lsl.w	r2, r1, r2
 8000554:	4611      	mov	r1, r2
 8000556:	4a3e      	ldr	r2, [pc, #248]	; (8000650 <M_GPIO_void_SetPinDir+0x198>)
 8000558:	430b      	orrs	r3, r1
 800055a:	6013      	str	r3, [r2, #0]
			break;
 800055c:	e070      	b.n	8000640 <M_GPIO_void_SetPinDir+0x188>
			GPIOC_CRL &= ~(0b1111<<(PinID * 4)); //Clear the 4 Bits
 800055e:	4b3d      	ldr	r3, [pc, #244]	; (8000654 <M_GPIO_void_SetPinDir+0x19c>)
 8000560:	681b      	ldr	r3, [r3, #0]
 8000562:	79ba      	ldrb	r2, [r7, #6]
 8000564:	0092      	lsls	r2, r2, #2
 8000566:	210f      	movs	r1, #15
 8000568:	fa01 f202 	lsl.w	r2, r1, r2
 800056c:	43d2      	mvns	r2, r2
 800056e:	4611      	mov	r1, r2
 8000570:	4a38      	ldr	r2, [pc, #224]	; (8000654 <M_GPIO_void_SetPinDir+0x19c>)
 8000572:	400b      	ands	r3, r1
 8000574:	6013      	str	r3, [r2, #0]
			GPIOC_CRL |=  ((Dir)<<(PinID * 4)); //Assign The 4 Bits
 8000576:	4b37      	ldr	r3, [pc, #220]	; (8000654 <M_GPIO_void_SetPinDir+0x19c>)
 8000578:	681b      	ldr	r3, [r3, #0]
 800057a:	7979      	ldrb	r1, [r7, #5]
 800057c:	79ba      	ldrb	r2, [r7, #6]
 800057e:	0092      	lsls	r2, r2, #2
 8000580:	fa01 f202 	lsl.w	r2, r1, r2
 8000584:	4611      	mov	r1, r2
 8000586:	4a33      	ldr	r2, [pc, #204]	; (8000654 <M_GPIO_void_SetPinDir+0x19c>)
 8000588:	430b      	orrs	r3, r1
 800058a:	6013      	str	r3, [r2, #0]
			break;
 800058c:	e058      	b.n	8000640 <M_GPIO_void_SetPinDir+0x188>
	else if(PinID < 16) /*PIN0 : PIN7 --> CRL*/
 800058e:	79bb      	ldrb	r3, [r7, #6]
 8000590:	2b0f      	cmp	r3, #15
 8000592:	d854      	bhi.n	800063e <M_GPIO_void_SetPinDir+0x186>
		PinID -=8;
 8000594:	79bb      	ldrb	r3, [r7, #6]
 8000596:	3b08      	subs	r3, #8
 8000598:	71bb      	strb	r3, [r7, #6]
		switch(PortID)
 800059a:	79fb      	ldrb	r3, [r7, #7]
 800059c:	2b02      	cmp	r3, #2
 800059e:	d036      	beq.n	800060e <M_GPIO_void_SetPinDir+0x156>
 80005a0:	2b02      	cmp	r3, #2
 80005a2:	dc4d      	bgt.n	8000640 <M_GPIO_void_SetPinDir+0x188>
 80005a4:	2b00      	cmp	r3, #0
 80005a6:	d002      	beq.n	80005ae <M_GPIO_void_SetPinDir+0xf6>
 80005a8:	2b01      	cmp	r3, #1
 80005aa:	d018      	beq.n	80005de <M_GPIO_void_SetPinDir+0x126>
}
 80005ac:	e048      	b.n	8000640 <M_GPIO_void_SetPinDir+0x188>
			GPIOA_CRH &= ~(0b1111<<(PinID * 4)); //Clear the 4 Bits
 80005ae:	4b2a      	ldr	r3, [pc, #168]	; (8000658 <M_GPIO_void_SetPinDir+0x1a0>)
 80005b0:	681b      	ldr	r3, [r3, #0]
 80005b2:	79ba      	ldrb	r2, [r7, #6]
 80005b4:	0092      	lsls	r2, r2, #2
 80005b6:	210f      	movs	r1, #15
 80005b8:	fa01 f202 	lsl.w	r2, r1, r2
 80005bc:	43d2      	mvns	r2, r2
 80005be:	4611      	mov	r1, r2
 80005c0:	4a25      	ldr	r2, [pc, #148]	; (8000658 <M_GPIO_void_SetPinDir+0x1a0>)
 80005c2:	400b      	ands	r3, r1
 80005c4:	6013      	str	r3, [r2, #0]
			GPIOA_CRH |=  ((Dir)<<(PinID * 4)); //Assign The 4 Bits
 80005c6:	4b24      	ldr	r3, [pc, #144]	; (8000658 <M_GPIO_void_SetPinDir+0x1a0>)
 80005c8:	681b      	ldr	r3, [r3, #0]
 80005ca:	7979      	ldrb	r1, [r7, #5]
 80005cc:	79ba      	ldrb	r2, [r7, #6]
 80005ce:	0092      	lsls	r2, r2, #2
 80005d0:	fa01 f202 	lsl.w	r2, r1, r2
 80005d4:	4611      	mov	r1, r2
 80005d6:	4a20      	ldr	r2, [pc, #128]	; (8000658 <M_GPIO_void_SetPinDir+0x1a0>)
 80005d8:	430b      	orrs	r3, r1
 80005da:	6013      	str	r3, [r2, #0]
			break;
 80005dc:	e030      	b.n	8000640 <M_GPIO_void_SetPinDir+0x188>
			GPIOB_CRH &= ~(0b1111<<(PinID * 4)); //Clear the 4 Bits
 80005de:	4b1f      	ldr	r3, [pc, #124]	; (800065c <M_GPIO_void_SetPinDir+0x1a4>)
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	79ba      	ldrb	r2, [r7, #6]
 80005e4:	0092      	lsls	r2, r2, #2
 80005e6:	210f      	movs	r1, #15
 80005e8:	fa01 f202 	lsl.w	r2, r1, r2
 80005ec:	43d2      	mvns	r2, r2
 80005ee:	4611      	mov	r1, r2
 80005f0:	4a1a      	ldr	r2, [pc, #104]	; (800065c <M_GPIO_void_SetPinDir+0x1a4>)
 80005f2:	400b      	ands	r3, r1
 80005f4:	6013      	str	r3, [r2, #0]
			GPIOB_CRH |=  ((Dir)<<(PinID * 4)); //Assign The 4 Bits
 80005f6:	4b19      	ldr	r3, [pc, #100]	; (800065c <M_GPIO_void_SetPinDir+0x1a4>)
 80005f8:	681b      	ldr	r3, [r3, #0]
 80005fa:	7979      	ldrb	r1, [r7, #5]
 80005fc:	79ba      	ldrb	r2, [r7, #6]
 80005fe:	0092      	lsls	r2, r2, #2
 8000600:	fa01 f202 	lsl.w	r2, r1, r2
 8000604:	4611      	mov	r1, r2
 8000606:	4a15      	ldr	r2, [pc, #84]	; (800065c <M_GPIO_void_SetPinDir+0x1a4>)
 8000608:	430b      	orrs	r3, r1
 800060a:	6013      	str	r3, [r2, #0]
			break;
 800060c:	e018      	b.n	8000640 <M_GPIO_void_SetPinDir+0x188>
			GPIOC_CRH &= ~(0b1111<<(PinID * 4)); //Clear the 4 Bits
 800060e:	4b14      	ldr	r3, [pc, #80]	; (8000660 <M_GPIO_void_SetPinDir+0x1a8>)
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	79ba      	ldrb	r2, [r7, #6]
 8000614:	0092      	lsls	r2, r2, #2
 8000616:	210f      	movs	r1, #15
 8000618:	fa01 f202 	lsl.w	r2, r1, r2
 800061c:	43d2      	mvns	r2, r2
 800061e:	4611      	mov	r1, r2
 8000620:	4a0f      	ldr	r2, [pc, #60]	; (8000660 <M_GPIO_void_SetPinDir+0x1a8>)
 8000622:	400b      	ands	r3, r1
 8000624:	6013      	str	r3, [r2, #0]
			GPIOC_CRH |=  ((Dir)<<(PinID * 4)); //Assign The 4 Bits
 8000626:	4b0e      	ldr	r3, [pc, #56]	; (8000660 <M_GPIO_void_SetPinDir+0x1a8>)
 8000628:	681b      	ldr	r3, [r3, #0]
 800062a:	7979      	ldrb	r1, [r7, #5]
 800062c:	79ba      	ldrb	r2, [r7, #6]
 800062e:	0092      	lsls	r2, r2, #2
 8000630:	fa01 f202 	lsl.w	r2, r1, r2
 8000634:	4611      	mov	r1, r2
 8000636:	4a0a      	ldr	r2, [pc, #40]	; (8000660 <M_GPIO_void_SetPinDir+0x1a8>)
 8000638:	430b      	orrs	r3, r1
 800063a:	6013      	str	r3, [r2, #0]
			break;
 800063c:	e000      	b.n	8000640 <M_GPIO_void_SetPinDir+0x188>
	}
 800063e:	bf00      	nop
}
 8000640:	bf00      	nop
 8000642:	370c      	adds	r7, #12
 8000644:	46bd      	mov	sp, r7
 8000646:	bc80      	pop	{r7}
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop
 800064c:	40010800 	.word	0x40010800
 8000650:	40010c00 	.word	0x40010c00
 8000654:	40011000 	.word	0x40011000
 8000658:	40010804 	.word	0x40010804
 800065c:	40010c04 	.word	0x40010c04
 8000660:	40011004 	.word	0x40011004

08000664 <M_GPIO_void_SetPinValue>:
void M_GPIO_void_SetPinValue(u8 PortID , u8 PinID , u8 Value)
{
 8000664:	b480      	push	{r7}
 8000666:	b083      	sub	sp, #12
 8000668:	af00      	add	r7, sp, #0
 800066a:	4603      	mov	r3, r0
 800066c:	71fb      	strb	r3, [r7, #7]
 800066e:	460b      	mov	r3, r1
 8000670:	71bb      	strb	r3, [r7, #6]
 8000672:	4613      	mov	r3, r2
 8000674:	717b      	strb	r3, [r7, #5]
	//Range Check
if(PortID < 3 && PinID < 16)
 8000676:	79fb      	ldrb	r3, [r7, #7]
 8000678:	2b02      	cmp	r3, #2
 800067a:	d861      	bhi.n	8000740 <M_GPIO_void_SetPinValue+0xdc>
 800067c:	79bb      	ldrb	r3, [r7, #6]
 800067e:	2b0f      	cmp	r3, #15
 8000680:	d85e      	bhi.n	8000740 <M_GPIO_void_SetPinValue+0xdc>
{
	if(Value == LOW)
 8000682:	797b      	ldrb	r3, [r7, #5]
 8000684:	2b00      	cmp	r3, #0
 8000686:	d12d      	bne.n	80006e4 <M_GPIO_void_SetPinValue+0x80>
	{
		switch(PortID)
 8000688:	79fb      	ldrb	r3, [r7, #7]
 800068a:	2b02      	cmp	r3, #2
 800068c:	d01e      	beq.n	80006cc <M_GPIO_void_SetPinValue+0x68>
 800068e:	2b02      	cmp	r3, #2
 8000690:	dc57      	bgt.n	8000742 <M_GPIO_void_SetPinValue+0xde>
 8000692:	2b00      	cmp	r3, #0
 8000694:	d002      	beq.n	800069c <M_GPIO_void_SetPinValue+0x38>
 8000696:	2b01      	cmp	r3, #1
 8000698:	d00c      	beq.n	80006b4 <M_GPIO_void_SetPinValue+0x50>
			SET_BIT(GPIOC_ODR , PinID);
			break;
		}
	}
}
}
 800069a:	e052      	b.n	8000742 <M_GPIO_void_SetPinValue+0xde>
			CLR_BIT(GPIOA_ODR , PinID);
 800069c:	4b2b      	ldr	r3, [pc, #172]	; (800074c <M_GPIO_void_SetPinValue+0xe8>)
 800069e:	681b      	ldr	r3, [r3, #0]
 80006a0:	79ba      	ldrb	r2, [r7, #6]
 80006a2:	2101      	movs	r1, #1
 80006a4:	fa01 f202 	lsl.w	r2, r1, r2
 80006a8:	43d2      	mvns	r2, r2
 80006aa:	4611      	mov	r1, r2
 80006ac:	4a27      	ldr	r2, [pc, #156]	; (800074c <M_GPIO_void_SetPinValue+0xe8>)
 80006ae:	400b      	ands	r3, r1
 80006b0:	6013      	str	r3, [r2, #0]
			break;
 80006b2:	e046      	b.n	8000742 <M_GPIO_void_SetPinValue+0xde>
			CLR_BIT(GPIOB_ODR , PinID);
 80006b4:	4b26      	ldr	r3, [pc, #152]	; (8000750 <M_GPIO_void_SetPinValue+0xec>)
 80006b6:	681b      	ldr	r3, [r3, #0]
 80006b8:	79ba      	ldrb	r2, [r7, #6]
 80006ba:	2101      	movs	r1, #1
 80006bc:	fa01 f202 	lsl.w	r2, r1, r2
 80006c0:	43d2      	mvns	r2, r2
 80006c2:	4611      	mov	r1, r2
 80006c4:	4a22      	ldr	r2, [pc, #136]	; (8000750 <M_GPIO_void_SetPinValue+0xec>)
 80006c6:	400b      	ands	r3, r1
 80006c8:	6013      	str	r3, [r2, #0]
			break;
 80006ca:	e03a      	b.n	8000742 <M_GPIO_void_SetPinValue+0xde>
			CLR_BIT(GPIOC_ODR , PinID);
 80006cc:	4b21      	ldr	r3, [pc, #132]	; (8000754 <M_GPIO_void_SetPinValue+0xf0>)
 80006ce:	681b      	ldr	r3, [r3, #0]
 80006d0:	79ba      	ldrb	r2, [r7, #6]
 80006d2:	2101      	movs	r1, #1
 80006d4:	fa01 f202 	lsl.w	r2, r1, r2
 80006d8:	43d2      	mvns	r2, r2
 80006da:	4611      	mov	r1, r2
 80006dc:	4a1d      	ldr	r2, [pc, #116]	; (8000754 <M_GPIO_void_SetPinValue+0xf0>)
 80006de:	400b      	ands	r3, r1
 80006e0:	6013      	str	r3, [r2, #0]
			break;
 80006e2:	e02e      	b.n	8000742 <M_GPIO_void_SetPinValue+0xde>
	else if(Value == HIGH)
 80006e4:	797b      	ldrb	r3, [r7, #5]
 80006e6:	2b01      	cmp	r3, #1
 80006e8:	d12a      	bne.n	8000740 <M_GPIO_void_SetPinValue+0xdc>
		switch(PortID)
 80006ea:	79fb      	ldrb	r3, [r7, #7]
 80006ec:	2b02      	cmp	r3, #2
 80006ee:	d01c      	beq.n	800072a <M_GPIO_void_SetPinValue+0xc6>
 80006f0:	2b02      	cmp	r3, #2
 80006f2:	dc26      	bgt.n	8000742 <M_GPIO_void_SetPinValue+0xde>
 80006f4:	2b00      	cmp	r3, #0
 80006f6:	d002      	beq.n	80006fe <M_GPIO_void_SetPinValue+0x9a>
 80006f8:	2b01      	cmp	r3, #1
 80006fa:	d00b      	beq.n	8000714 <M_GPIO_void_SetPinValue+0xb0>
}
 80006fc:	e021      	b.n	8000742 <M_GPIO_void_SetPinValue+0xde>
			SET_BIT(GPIOA_ODR , PinID);
 80006fe:	4b13      	ldr	r3, [pc, #76]	; (800074c <M_GPIO_void_SetPinValue+0xe8>)
 8000700:	681b      	ldr	r3, [r3, #0]
 8000702:	79ba      	ldrb	r2, [r7, #6]
 8000704:	2101      	movs	r1, #1
 8000706:	fa01 f202 	lsl.w	r2, r1, r2
 800070a:	4611      	mov	r1, r2
 800070c:	4a0f      	ldr	r2, [pc, #60]	; (800074c <M_GPIO_void_SetPinValue+0xe8>)
 800070e:	430b      	orrs	r3, r1
 8000710:	6013      	str	r3, [r2, #0]
			break;
 8000712:	e016      	b.n	8000742 <M_GPIO_void_SetPinValue+0xde>
			SET_BIT(GPIOB_ODR , PinID);
 8000714:	4b0e      	ldr	r3, [pc, #56]	; (8000750 <M_GPIO_void_SetPinValue+0xec>)
 8000716:	681b      	ldr	r3, [r3, #0]
 8000718:	79ba      	ldrb	r2, [r7, #6]
 800071a:	2101      	movs	r1, #1
 800071c:	fa01 f202 	lsl.w	r2, r1, r2
 8000720:	4611      	mov	r1, r2
 8000722:	4a0b      	ldr	r2, [pc, #44]	; (8000750 <M_GPIO_void_SetPinValue+0xec>)
 8000724:	430b      	orrs	r3, r1
 8000726:	6013      	str	r3, [r2, #0]
			break;
 8000728:	e00b      	b.n	8000742 <M_GPIO_void_SetPinValue+0xde>
			SET_BIT(GPIOC_ODR , PinID);
 800072a:	4b0a      	ldr	r3, [pc, #40]	; (8000754 <M_GPIO_void_SetPinValue+0xf0>)
 800072c:	681b      	ldr	r3, [r3, #0]
 800072e:	79ba      	ldrb	r2, [r7, #6]
 8000730:	2101      	movs	r1, #1
 8000732:	fa01 f202 	lsl.w	r2, r1, r2
 8000736:	4611      	mov	r1, r2
 8000738:	4a06      	ldr	r2, [pc, #24]	; (8000754 <M_GPIO_void_SetPinValue+0xf0>)
 800073a:	430b      	orrs	r3, r1
 800073c:	6013      	str	r3, [r2, #0]
			break;
 800073e:	e000      	b.n	8000742 <M_GPIO_void_SetPinValue+0xde>
	}
 8000740:	bf00      	nop
}
 8000742:	bf00      	nop
 8000744:	370c      	adds	r7, #12
 8000746:	46bd      	mov	sp, r7
 8000748:	bc80      	pop	{r7}
 800074a:	4770      	bx	lr
 800074c:	4001080c 	.word	0x4001080c
 8000750:	40010c0c 	.word	0x40010c0c
 8000754:	4001100c 	.word	0x4001100c

08000758 <EXTI0_IRQHandler>:
	}
}

//External Peripherals
void	EXTI0_IRQHandler(void)
{
 8000758:	b580      	push	{r7, lr}
 800075a:	af00      	add	r7, sp, #0
	EXTI0_CallBack(); // Ahmed();
 800075c:	4b02      	ldr	r3, [pc, #8]	; (8000768 <EXTI0_IRQHandler+0x10>)
 800075e:	681b      	ldr	r3, [r3, #0]
 8000760:	4798      	blx	r3
}
 8000762:	bf00      	nop
 8000764:	bd80      	pop	{r7, pc}
 8000766:	bf00      	nop
 8000768:	20000020 	.word	0x20000020

0800076c <H_LCD_void_Init>:

#include "LCD_priv.h"
#include "LCD_config.h"
#include "LCD_int.h"
void H_LCD_void_Init(void)
{
 800076c:	b580      	push	{r7, lr}
 800076e:	af00      	add	r7, sp, #0

	// set direction Rs, EN
	M_GPIO_void_SetPinDir(LCD_RS_PORT, LCD_RS_PIN,OUT_2MHZ_PP);
 8000770:	2202      	movs	r2, #2
 8000772:	2101      	movs	r1, #1
 8000774:	2000      	movs	r0, #0
 8000776:	f7ff fe9f 	bl	80004b8 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(LCD_EN_PORT,LCD_EN_PIN,OUT_2MHZ_PP);
 800077a:	2202      	movs	r2, #2
 800077c:	2102      	movs	r1, #2
 800077e:	2000      	movs	r0, #0
 8000780:	f7ff fe9a 	bl	80004b8 <M_GPIO_void_SetPinDir>
	//set direction D4 .. D7
	M_GPIO_void_SetPinDir(LCD_D7_PORT,LCD_D7_PIN,OUT_2MHZ_PP);
 8000784:	2202      	movs	r2, #2
 8000786:	2106      	movs	r1, #6
 8000788:	2000      	movs	r0, #0
 800078a:	f7ff fe95 	bl	80004b8 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(LCD_D6_PORT,LCD_D6_PIN,OUT_2MHZ_PP);
 800078e:	2202      	movs	r2, #2
 8000790:	2105      	movs	r1, #5
 8000792:	2000      	movs	r0, #0
 8000794:	f7ff fe90 	bl	80004b8 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(LCD_D5_PORT,LCD_D5_PIN,OUT_2MHZ_PP);
 8000798:	2202      	movs	r2, #2
 800079a:	2104      	movs	r1, #4
 800079c:	2000      	movs	r0, #0
 800079e:	f7ff fe8b 	bl	80004b8 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(LCD_D4_PORT,LCD_D4_PIN,OUT_2MHZ_PP);
 80007a2:	2202      	movs	r2, #2
 80007a4:	2103      	movs	r1, #3
 80007a6:	2000      	movs	r0, #0
 80007a8:	f7ff fe86 	bl	80004b8 <M_GPIO_void_SetPinDir>
	// send Init Sequence
#if(LCD_MODE  == LCD_8BIT_MODE_)
	_delay_ms(35);
	H_LCD_void_sendCommand(LCD_8BIT_MODE_2LINES_5X7);
#elif(LCD_MODE ==  LCD_4BIT_MODE_)
	_delay_ms(35);
 80007ac:	2023      	movs	r0, #35	; 0x23
 80007ae:	f7ff fde9 	bl	8000384 <_delay_ms>
	// Rs = command = 0
	M_GPIO_void_SetPinValue(LCD_RS_PORT,LCD_RS_PIN,LOW);
 80007b2:	2200      	movs	r2, #0
 80007b4:	2101      	movs	r1, #1
 80007b6:	2000      	movs	r0, #0
 80007b8:	f7ff ff54 	bl	8000664 <M_GPIO_void_SetPinValue>
	// EN = 0 disabled
	M_GPIO_void_SetPinValue(LCD_EN_PORT,LCD_EN_PIN,LOW);
 80007bc:	2200      	movs	r2, #0
 80007be:	2102      	movs	r1, #2
 80007c0:	2000      	movs	r0, #0
 80007c2:	f7ff ff4f 	bl	8000664 <M_GPIO_void_SetPinValue>
	// prepare data
	M_GPIO_void_SetPinValue(LCD_D7_PORT,LCD_D7_PIN,0);
 80007c6:	2200      	movs	r2, #0
 80007c8:	2106      	movs	r1, #6
 80007ca:	2000      	movs	r0, #0
 80007cc:	f7ff ff4a 	bl	8000664 <M_GPIO_void_SetPinValue>
	M_GPIO_void_SetPinValue(LCD_D6_PORT,LCD_D6_PIN,0);
 80007d0:	2200      	movs	r2, #0
 80007d2:	2105      	movs	r1, #5
 80007d4:	2000      	movs	r0, #0
 80007d6:	f7ff ff45 	bl	8000664 <M_GPIO_void_SetPinValue>
	M_GPIO_void_SetPinValue(LCD_D5_PORT,LCD_D5_PIN,1);
 80007da:	2201      	movs	r2, #1
 80007dc:	2104      	movs	r1, #4
 80007de:	2000      	movs	r0, #0
 80007e0:	f7ff ff40 	bl	8000664 <M_GPIO_void_SetPinValue>
	M_GPIO_void_SetPinValue(LCD_D4_PORT,LCD_D4_PIN,0);
 80007e4:	2200      	movs	r2, #0
 80007e6:	2103      	movs	r1, #3
 80007e8:	2000      	movs	r0, #0
 80007ea:	f7ff ff3b 	bl	8000664 <M_GPIO_void_SetPinValue>
	//EN = 1
	M_GPIO_void_SetPinValue(LCD_EN_PORT,LCD_EN_PIN,HIGH);
 80007ee:	2201      	movs	r2, #1
 80007f0:	2102      	movs	r1, #2
 80007f2:	2000      	movs	r0, #0
 80007f4:	f7ff ff36 	bl	8000664 <M_GPIO_void_SetPinValue>
	// delay 1 msec (to allow latching)
	_delay_ms(1);
 80007f8:	2001      	movs	r0, #1
 80007fa:	f7ff fdc3 	bl	8000384 <_delay_ms>
	// EN = 0
	M_GPIO_void_SetPinValue(LCD_EN_PORT,LCD_EN_PIN,LOW);
 80007fe:	2200      	movs	r2, #0
 8000800:	2102      	movs	r1, #2
 8000802:	2000      	movs	r0, #0
 8000804:	f7ff ff2e 	bl	8000664 <M_GPIO_void_SetPinValue>
	// delay to allow processing
	_delay_ms(5);
 8000808:	2005      	movs	r0, #5
 800080a:	f7ff fdbb 	bl	8000384 <_delay_ms>
	H_LCD_void_sendCommand(LCD_4BIT_MODE_2LINES_5X7);
 800080e:	2028      	movs	r0, #40	; 0x28
 8000810:	f000 f80b 	bl	800082a <H_LCD_void_sendCommand>
#else
  #error("wrong LCD Mode")
#endif
	// display ON/OFF
	H_LCD_void_sendCommand(LCD_DISPON_CURSON_BLINKOFF);
 8000814:	200e      	movs	r0, #14
 8000816:	f000 f808 	bl	800082a <H_LCD_void_sendCommand>
	// display Clear
	H_LCD_void_sendCommand(LCD_CLEAR_DISPALY);
 800081a:	2001      	movs	r0, #1
 800081c:	f000 f805 	bl	800082a <H_LCD_void_sendCommand>
	// Entry Mode Set
	H_LCD_void_sendCommand(LCD_ENTRY_MODE_SET);
 8000820:	2006      	movs	r0, #6
 8000822:	f000 f802 	bl	800082a <H_LCD_void_sendCommand>

}
 8000826:	bf00      	nop
 8000828:	bd80      	pop	{r7, pc}

0800082a <H_LCD_void_sendCommand>:
	M_GPIO_void_SetPinValue(LCD_RS_PORT,LCD_RS_PIN,HIGH);
  // step 2 : write data
   H_LCD_void_writeNlatch(copy_u8data);
}
void H_LCD_void_sendCommand(u8 copy_u8Command)
{
 800082a:	b580      	push	{r7, lr}
 800082c:	b082      	sub	sp, #8
 800082e:	af00      	add	r7, sp, #0
 8000830:	4603      	mov	r3, r0
 8000832:	71fb      	strb	r3, [r7, #7]
	// step 1 : select RS to be in command mode (RS = 0)
	M_GPIO_void_SetPinValue(LCD_RS_PORT,LCD_RS_PIN,LOW);
 8000834:	2200      	movs	r2, #0
 8000836:	2101      	movs	r1, #1
 8000838:	2000      	movs	r0, #0
 800083a:	f7ff ff13 	bl	8000664 <M_GPIO_void_SetPinValue>
	// step 2 : write command
	H_LCD_void_writeNlatch(copy_u8Command);
 800083e:	79fb      	ldrb	r3, [r7, #7]
 8000840:	4618      	mov	r0, r3
 8000842:	f000 f804 	bl	800084e <H_LCD_void_writeNlatch>

}
 8000846:	bf00      	nop
 8000848:	3708      	adds	r7, #8
 800084a:	46bd      	mov	sp, r7
 800084c:	bd80      	pop	{r7, pc}

0800084e <H_LCD_void_writeNlatch>:
void H_LCD_void_displayCustomChar(u8 copy_u8charCode)
{

}
static void H_LCD_void_writeNlatch(u8 copy_u8Byte)
{
 800084e:	b580      	push	{r7, lr}
 8000850:	b082      	sub	sp, #8
 8000852:	af00      	add	r7, sp, #0
 8000854:	4603      	mov	r3, r0
 8000856:	71fb      	strb	r3, [r7, #7]
 	M_GPIO_void_SetPinValue(LCD_EN_PORT, LCD_EN_PIN,LOW);
  // step 5 : delay to allow LCD to process
 	_delay_ms(5);
#elif(LCD_MODE ==  LCD_4BIT_MODE_)
 	// EN = 0 disabled
 	M_GPIO_void_SetPinValue(LCD_EN_PORT,LCD_EN_PIN,LOW);
 8000858:	2200      	movs	r2, #0
 800085a:	2102      	movs	r1, #2
 800085c:	2000      	movs	r0, #0
 800085e:	f7ff ff01 	bl	8000664 <M_GPIO_void_SetPinValue>
 	// devide Byte to 2 (4 bits )
 	// step 1 :send high order bits on pins (D7 .. D4)
 	M_GPIO_void_SetPinValue(LCD_D4_PORT ,LCD_D4_PIN  , GET_BIT(copy_u8Byte,4));
 8000862:	79fb      	ldrb	r3, [r7, #7]
 8000864:	091b      	lsrs	r3, r3, #4
 8000866:	b2db      	uxtb	r3, r3
 8000868:	f003 0301 	and.w	r3, r3, #1
 800086c:	b2db      	uxtb	r3, r3
 800086e:	461a      	mov	r2, r3
 8000870:	2103      	movs	r1, #3
 8000872:	2000      	movs	r0, #0
 8000874:	f7ff fef6 	bl	8000664 <M_GPIO_void_SetPinValue>
 	M_GPIO_void_SetPinValue(LCD_D5_PORT ,LCD_D5_PIN  , GET_BIT(copy_u8Byte,5));
 8000878:	79fb      	ldrb	r3, [r7, #7]
 800087a:	095b      	lsrs	r3, r3, #5
 800087c:	b2db      	uxtb	r3, r3
 800087e:	f003 0301 	and.w	r3, r3, #1
 8000882:	b2db      	uxtb	r3, r3
 8000884:	461a      	mov	r2, r3
 8000886:	2104      	movs	r1, #4
 8000888:	2000      	movs	r0, #0
 800088a:	f7ff feeb 	bl	8000664 <M_GPIO_void_SetPinValue>
 	M_GPIO_void_SetPinValue(LCD_D6_PORT ,LCD_D6_PIN  , GET_BIT(copy_u8Byte,6));
 800088e:	79fb      	ldrb	r3, [r7, #7]
 8000890:	099b      	lsrs	r3, r3, #6
 8000892:	b2db      	uxtb	r3, r3
 8000894:	f003 0301 	and.w	r3, r3, #1
 8000898:	b2db      	uxtb	r3, r3
 800089a:	461a      	mov	r2, r3
 800089c:	2105      	movs	r1, #5
 800089e:	2000      	movs	r0, #0
 80008a0:	f7ff fee0 	bl	8000664 <M_GPIO_void_SetPinValue>
 	M_GPIO_void_SetPinValue(LCD_D7_PORT ,LCD_D7_PIN  , GET_BIT(copy_u8Byte,7));
 80008a4:	79fb      	ldrb	r3, [r7, #7]
 80008a6:	09db      	lsrs	r3, r3, #7
 80008a8:	b2db      	uxtb	r3, r3
 80008aa:	461a      	mov	r2, r3
 80008ac:	2106      	movs	r1, #6
 80008ae:	2000      	movs	r0, #0
 80008b0:	f7ff fed8 	bl	8000664 <M_GPIO_void_SetPinValue>
 	  //step 2 : Activate Enable ,( E = 1)
 	M_GPIO_void_SetPinValue(LCD_EN_PORT, LCD_EN_PIN,HIGH);
 80008b4:	2201      	movs	r2, #1
 80008b6:	2102      	movs	r1, #2
 80008b8:	2000      	movs	r0, #0
 80008ba:	f7ff fed3 	bl	8000664 <M_GPIO_void_SetPinValue>
 	  // step 3 : delay for 1 msec 	to allow latching
 	 	_delay_ms(1);
 80008be:	2001      	movs	r0, #1
 80008c0:	f7ff fd60 	bl	8000384 <_delay_ms>
 	  // step 4 : deactivate Enable (E = 0)
 	 	M_GPIO_void_SetPinValue(LCD_EN_PORT, LCD_EN_PIN,LOW);
 80008c4:	2200      	movs	r2, #0
 80008c6:	2102      	movs	r1, #2
 80008c8:	2000      	movs	r0, #0
 80008ca:	f7ff fecb 	bl	8000664 <M_GPIO_void_SetPinValue>
 	  // step 5 : delay to allow LCD to process
 	 	_delay_ms(5);
 80008ce:	2005      	movs	r0, #5
 80008d0:	f7ff fd58 	bl	8000384 <_delay_ms>
 	 	// step 6 :send Low order bits on pins (D7 .. D4)
 	 	M_GPIO_void_SetPinValue(LCD_D4_PORT ,LCD_D4_PIN  , GET_BIT(copy_u8Byte,0));
 80008d4:	79fb      	ldrb	r3, [r7, #7]
 80008d6:	f003 0301 	and.w	r3, r3, #1
 80008da:	b2db      	uxtb	r3, r3
 80008dc:	461a      	mov	r2, r3
 80008de:	2103      	movs	r1, #3
 80008e0:	2000      	movs	r0, #0
 80008e2:	f7ff febf 	bl	8000664 <M_GPIO_void_SetPinValue>
 	 	M_GPIO_void_SetPinValue(LCD_D5_PORT ,LCD_D5_PIN  , GET_BIT(copy_u8Byte,1));
 80008e6:	79fb      	ldrb	r3, [r7, #7]
 80008e8:	085b      	lsrs	r3, r3, #1
 80008ea:	b2db      	uxtb	r3, r3
 80008ec:	f003 0301 	and.w	r3, r3, #1
 80008f0:	b2db      	uxtb	r3, r3
 80008f2:	461a      	mov	r2, r3
 80008f4:	2104      	movs	r1, #4
 80008f6:	2000      	movs	r0, #0
 80008f8:	f7ff feb4 	bl	8000664 <M_GPIO_void_SetPinValue>
 	 	M_GPIO_void_SetPinValue(LCD_D6_PORT ,LCD_D6_PIN  , GET_BIT(copy_u8Byte,2));
 80008fc:	79fb      	ldrb	r3, [r7, #7]
 80008fe:	089b      	lsrs	r3, r3, #2
 8000900:	b2db      	uxtb	r3, r3
 8000902:	f003 0301 	and.w	r3, r3, #1
 8000906:	b2db      	uxtb	r3, r3
 8000908:	461a      	mov	r2, r3
 800090a:	2105      	movs	r1, #5
 800090c:	2000      	movs	r0, #0
 800090e:	f7ff fea9 	bl	8000664 <M_GPIO_void_SetPinValue>
 	 	M_GPIO_void_SetPinValue(LCD_D7_PORT ,LCD_D7_PIN  , GET_BIT(copy_u8Byte,3));
 8000912:	79fb      	ldrb	r3, [r7, #7]
 8000914:	08db      	lsrs	r3, r3, #3
 8000916:	b2db      	uxtb	r3, r3
 8000918:	f003 0301 	and.w	r3, r3, #1
 800091c:	b2db      	uxtb	r3, r3
 800091e:	461a      	mov	r2, r3
 8000920:	2106      	movs	r1, #6
 8000922:	2000      	movs	r0, #0
 8000924:	f7ff fe9e 	bl	8000664 <M_GPIO_void_SetPinValue>
 	 	 //step 7 : Activate Enable ,( E = 1)
 	 	M_GPIO_void_SetPinValue(LCD_EN_PORT, LCD_EN_PIN,HIGH);
 8000928:	2201      	movs	r2, #1
 800092a:	2102      	movs	r1, #2
 800092c:	2000      	movs	r0, #0
 800092e:	f7ff fe99 	bl	8000664 <M_GPIO_void_SetPinValue>
 	 	 // step 8 : delay for 1 msec 	to allow latching
 	 	_delay_ms(1);
 8000932:	2001      	movs	r0, #1
 8000934:	f7ff fd26 	bl	8000384 <_delay_ms>
 	 	 // step 9 : deactivate Enable (E = 0)
 	 	M_GPIO_void_SetPinValue(LCD_EN_PORT, LCD_EN_PIN,LOW);
 8000938:	2200      	movs	r2, #0
 800093a:	2102      	movs	r1, #2
 800093c:	2000      	movs	r0, #0
 800093e:	f7ff fe91 	bl	8000664 <M_GPIO_void_SetPinValue>
 	 	 // step 10 : delay to allow LCD to process
 	 	_delay_ms(5);
 8000942:	2005      	movs	r0, #5
 8000944:	f7ff fd1e 	bl	8000384 <_delay_ms>
#else
  #error("Wrong LCD mode")
#endif

}
 8000948:	bf00      	nop
 800094a:	3708      	adds	r7, #8
 800094c:	46bd      	mov	sp, r7
 800094e:	bd80      	pop	{r7, pc}

08000950 <EXTI1_IRQHandler>:
	}
}

//External Peripherals
void	EXTI1_IRQHandler(void)
{
 8000950:	b580      	push	{r7, lr}
 8000952:	af00      	add	r7, sp, #0
	EXTI1_CallBack();
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <EXTI1_IRQHandler+0x10>)
 8000956:	681b      	ldr	r3, [r3, #0]
 8000958:	4798      	blx	r3
}
 800095a:	bf00      	nop
 800095c:	bd80      	pop	{r7, pc}
 800095e:	bf00      	nop
 8000960:	20000024 	.word	0x20000024

08000964 <MRCC_voidSysClkInit>:




void	MRCC_voidSysClkInit(void)
{
 8000964:	b480      	push	{r7}
 8000966:	af00      	add	r7, sp, #0
	#if			SYSTEM_CLK	==	RCC_HSI
				SET_BIT(RCC_CR,0);
 8000968:	4b0a      	ldr	r3, [pc, #40]	; (8000994 <MRCC_voidSysClkInit+0x30>)
 800096a:	681b      	ldr	r3, [r3, #0]
 800096c:	4a09      	ldr	r2, [pc, #36]	; (8000994 <MRCC_voidSysClkInit+0x30>)
 800096e:	f043 0301 	orr.w	r3, r3, #1
 8000972:	6013      	str	r3, [r2, #0]
				CLR_BIT(RCC_CFGR,0);
 8000974:	4b08      	ldr	r3, [pc, #32]	; (8000998 <MRCC_voidSysClkInit+0x34>)
 8000976:	681b      	ldr	r3, [r3, #0]
 8000978:	4a07      	ldr	r2, [pc, #28]	; (8000998 <MRCC_voidSysClkInit+0x34>)
 800097a:	f023 0301 	bic.w	r3, r3, #1
 800097e:	6013      	str	r3, [r2, #0]
				CLR_BIT(RCC_CFGR,1);
 8000980:	4b05      	ldr	r3, [pc, #20]	; (8000998 <MRCC_voidSysClkInit+0x34>)
 8000982:	681b      	ldr	r3, [r3, #0]
 8000984:	4a04      	ldr	r2, [pc, #16]	; (8000998 <MRCC_voidSysClkInit+0x34>)
 8000986:	f023 0302 	bic.w	r3, r3, #2
 800098a:	6013      	str	r3, [r2, #0]
				CLR_BIT(RCC_CFGR,0);
				SET_BIT(RCC_CFGR,1);
	#else
		#error	"Wrong choice of RCC clock type"
	#endif
}
 800098c:	bf00      	nop
 800098e:	46bd      	mov	sp, r7
 8000990:	bc80      	pop	{r7}
 8000992:	4770      	bx	lr
 8000994:	40021000 	.word	0x40021000
 8000998:	40021004 	.word	0x40021004

0800099c <MRCC_voidEnablePerClk>:
void	MRCC_voidEnablePerClk(u8 PerBus,u8 PerNum)
{
 800099c:	b480      	push	{r7}
 800099e:	b083      	sub	sp, #12
 80009a0:	af00      	add	r7, sp, #0
 80009a2:	4603      	mov	r3, r0
 80009a4:	460a      	mov	r2, r1
 80009a6:	71fb      	strb	r3, [r7, #7]
 80009a8:	4613      	mov	r3, r2
 80009aa:	71bb      	strb	r3, [r7, #6]
	/*	Range Check						*/
	if(PerNum<32)
 80009ac:	79bb      	ldrb	r3, [r7, #6]
 80009ae:	2b1f      	cmp	r3, #31
 80009b0:	d82a      	bhi.n	8000a08 <MRCC_voidEnablePerClk+0x6c>
	{
		switch(PerBus)
 80009b2:	79fb      	ldrb	r3, [r7, #7]
 80009b4:	2b02      	cmp	r3, #2
 80009b6:	d01c      	beq.n	80009f2 <MRCC_voidEnablePerClk+0x56>
 80009b8:	2b02      	cmp	r3, #2
 80009ba:	dc25      	bgt.n	8000a08 <MRCC_voidEnablePerClk+0x6c>
 80009bc:	2b00      	cmp	r3, #0
 80009be:	d002      	beq.n	80009c6 <MRCC_voidEnablePerClk+0x2a>
 80009c0:	2b01      	cmp	r3, #1
 80009c2:	d00b      	beq.n	80009dc <MRCC_voidEnablePerClk+0x40>
			case RCC_APB2	:	SET_BIT(RCC_APB2ENR,PerNum);	break;
		}
	}
	else
	{/*		Report Error 			*/}	
}
 80009c4:	e020      	b.n	8000a08 <MRCC_voidEnablePerClk+0x6c>
			case RCC_AHB	:	SET_BIT(RCC_AHBENR ,PerNum);	break;
 80009c6:	4b13      	ldr	r3, [pc, #76]	; (8000a14 <MRCC_voidEnablePerClk+0x78>)
 80009c8:	681b      	ldr	r3, [r3, #0]
 80009ca:	79ba      	ldrb	r2, [r7, #6]
 80009cc:	2101      	movs	r1, #1
 80009ce:	fa01 f202 	lsl.w	r2, r1, r2
 80009d2:	4611      	mov	r1, r2
 80009d4:	4a0f      	ldr	r2, [pc, #60]	; (8000a14 <MRCC_voidEnablePerClk+0x78>)
 80009d6:	430b      	orrs	r3, r1
 80009d8:	6013      	str	r3, [r2, #0]
 80009da:	e015      	b.n	8000a08 <MRCC_voidEnablePerClk+0x6c>
			case RCC_APB1	:	SET_BIT(RCC_APB1ENR,PerNum);	break;
 80009dc:	4b0e      	ldr	r3, [pc, #56]	; (8000a18 <MRCC_voidEnablePerClk+0x7c>)
 80009de:	681b      	ldr	r3, [r3, #0]
 80009e0:	79ba      	ldrb	r2, [r7, #6]
 80009e2:	2101      	movs	r1, #1
 80009e4:	fa01 f202 	lsl.w	r2, r1, r2
 80009e8:	4611      	mov	r1, r2
 80009ea:	4a0b      	ldr	r2, [pc, #44]	; (8000a18 <MRCC_voidEnablePerClk+0x7c>)
 80009ec:	430b      	orrs	r3, r1
 80009ee:	6013      	str	r3, [r2, #0]
 80009f0:	e00a      	b.n	8000a08 <MRCC_voidEnablePerClk+0x6c>
			case RCC_APB2	:	SET_BIT(RCC_APB2ENR,PerNum);	break;
 80009f2:	4b0a      	ldr	r3, [pc, #40]	; (8000a1c <MRCC_voidEnablePerClk+0x80>)
 80009f4:	681b      	ldr	r3, [r3, #0]
 80009f6:	79ba      	ldrb	r2, [r7, #6]
 80009f8:	2101      	movs	r1, #1
 80009fa:	fa01 f202 	lsl.w	r2, r1, r2
 80009fe:	4611      	mov	r1, r2
 8000a00:	4a06      	ldr	r2, [pc, #24]	; (8000a1c <MRCC_voidEnablePerClk+0x80>)
 8000a02:	430b      	orrs	r3, r1
 8000a04:	6013      	str	r3, [r2, #0]
 8000a06:	bf00      	nop
}
 8000a08:	bf00      	nop
 8000a0a:	370c      	adds	r7, #12
 8000a0c:	46bd      	mov	sp, r7
 8000a0e:	bc80      	pop	{r7}
 8000a10:	4770      	bx	lr
 8000a12:	bf00      	nop
 8000a14:	40021014 	.word	0x40021014
 8000a18:	4002101c 	.word	0x4002101c
 8000a1c:	40021018 	.word	0x40021018

08000a20 <MRCC_voidSetADCPre>:
	else
	{/*		Report Error 			*/}
}

void	MRCC_voidSetADCPre(u8 Copy_u8Pre)
{
 8000a20:	b480      	push	{r7}
 8000a22:	b083      	sub	sp, #12
 8000a24:	af00      	add	r7, sp, #0
 8000a26:	4603      	mov	r3, r0
 8000a28:	71fb      	strb	r3, [r7, #7]
	if(Copy_u8Pre <= RCC_ADC_PRE_8)
 8000a2a:	79fb      	ldrb	r3, [r7, #7]
 8000a2c:	2b03      	cmp	r3, #3
 8000a2e:	d813      	bhi.n	8000a58 <MRCC_voidSetADCPre+0x38>
	{
		CLR_BIT(RCC_CFGR , 14);
 8000a30:	4b0c      	ldr	r3, [pc, #48]	; (8000a64 <MRCC_voidSetADCPre+0x44>)
 8000a32:	681b      	ldr	r3, [r3, #0]
 8000a34:	4a0b      	ldr	r2, [pc, #44]	; (8000a64 <MRCC_voidSetADCPre+0x44>)
 8000a36:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8000a3a:	6013      	str	r3, [r2, #0]
		CLR_BIT(RCC_CFGR , 15);
 8000a3c:	4b09      	ldr	r3, [pc, #36]	; (8000a64 <MRCC_voidSetADCPre+0x44>)
 8000a3e:	681b      	ldr	r3, [r3, #0]
 8000a40:	4a08      	ldr	r2, [pc, #32]	; (8000a64 <MRCC_voidSetADCPre+0x44>)
 8000a42:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000a46:	6013      	str	r3, [r2, #0]
		RCC_CFGR |=  Copy_u8Pre << 14;
 8000a48:	4b06      	ldr	r3, [pc, #24]	; (8000a64 <MRCC_voidSetADCPre+0x44>)
 8000a4a:	681b      	ldr	r3, [r3, #0]
 8000a4c:	79fa      	ldrb	r2, [r7, #7]
 8000a4e:	0392      	lsls	r2, r2, #14
 8000a50:	4611      	mov	r1, r2
 8000a52:	4a04      	ldr	r2, [pc, #16]	; (8000a64 <MRCC_voidSetADCPre+0x44>)
 8000a54:	430b      	orrs	r3, r1
 8000a56:	6013      	str	r3, [r2, #0]
	}
}
 8000a58:	bf00      	nop
 8000a5a:	370c      	adds	r7, #12
 8000a5c:	46bd      	mov	sp, r7
 8000a5e:	bc80      	pop	{r7}
 8000a60:	4770      	bx	lr
 8000a62:	bf00      	nop
 8000a64:	40021004 	.word	0x40021004

08000a68 <H_SSD_void_init>:
	{
		asm("NOP");
	}
}*/
void H_SSD_void_init(void)
{
 8000a68:	b580      	push	{r7, lr}
 8000a6a:	af00      	add	r7, sp, #0
	M_GPIO_void_SetPinDir(SSD_LED_A_PORT,  SSD_LED_A_PIN ,OUT_2MHZ_PP);
 8000a6c:	2202      	movs	r2, #2
 8000a6e:	2101      	movs	r1, #1
 8000a70:	2000      	movs	r0, #0
 8000a72:	f7ff fd21 	bl	80004b8 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(SSD_LED_B_PORT,  SSD_LED_B_PIN ,OUT_2MHZ_PP);
 8000a76:	2202      	movs	r2, #2
 8000a78:	2102      	movs	r1, #2
 8000a7a:	2000      	movs	r0, #0
 8000a7c:	f7ff fd1c 	bl	80004b8 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(SSD_LED_C_PORT,  SSD_LED_C_PIN ,OUT_2MHZ_PP);
 8000a80:	2202      	movs	r2, #2
 8000a82:	2103      	movs	r1, #3
 8000a84:	2000      	movs	r0, #0
 8000a86:	f7ff fd17 	bl	80004b8 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(SSD_LED_D_PORT,  SSD_LED_D_PIN ,OUT_2MHZ_PP);
 8000a8a:	2202      	movs	r2, #2
 8000a8c:	2104      	movs	r1, #4
 8000a8e:	2000      	movs	r0, #0
 8000a90:	f7ff fd12 	bl	80004b8 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(SSD_LED_E_PORT,  SSD_LED_E_PIN ,OUT_2MHZ_PP);
 8000a94:	2202      	movs	r2, #2
 8000a96:	2105      	movs	r1, #5
 8000a98:	2000      	movs	r0, #0
 8000a9a:	f7ff fd0d 	bl	80004b8 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(SSD_LED_F_PORT,  SSD_LED_F_PIN ,OUT_2MHZ_PP);
 8000a9e:	2202      	movs	r2, #2
 8000aa0:	2106      	movs	r1, #6
 8000aa2:	2000      	movs	r0, #0
 8000aa4:	f7ff fd08 	bl	80004b8 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(SSD_LED_G_PORT,  SSD_LED_G_PIN ,OUT_2MHZ_PP);
 8000aa8:	2202      	movs	r2, #2
 8000aaa:	2107      	movs	r1, #7
 8000aac:	2000      	movs	r0, #0
 8000aae:	f7ff fd03 	bl	80004b8 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(SSD_LED_DOT_PORT,  SSD_LED_DOT_PIN ,OUT_2MHZ_PP);
 8000ab2:	2202      	movs	r2, #2
 8000ab4:	2108      	movs	r1, #8
 8000ab6:	2000      	movs	r0, #0
 8000ab8:	f7ff fcfe 	bl	80004b8 <M_GPIO_void_SetPinDir>

	//ENABLE DIGITS 1

	M_GPIO_void_SetPinDir(SSD_DIG_1_EN_PORT,  SSD_DIG_1_EN_PIN ,OUT_2MHZ_PP);
 8000abc:	2202      	movs	r2, #2
 8000abe:	2109      	movs	r1, #9
 8000ac0:	2000      	movs	r0, #0
 8000ac2:	f7ff fcf9 	bl	80004b8 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(SSD_DIG_2_EN_PORT,  SSD_DIG_2_EN_PIN , OUT_2MHZ_PP);
 8000ac6:	2202      	movs	r2, #2
 8000ac8:	210a      	movs	r1, #10
 8000aca:	2000      	movs	r0, #0
 8000acc:	f7ff fcf4 	bl	80004b8 <M_GPIO_void_SetPinDir>

	M_GPIO_void_SetPinValue(SSD_DIG_1_EN_PORT,SSD_DIG_1_EN_PIN,LOW);
 8000ad0:	2200      	movs	r2, #0
 8000ad2:	2109      	movs	r1, #9
 8000ad4:	2000      	movs	r0, #0
 8000ad6:	f7ff fdc5 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,LOW);
 8000ada:	2200      	movs	r2, #0
 8000adc:	210a      	movs	r1, #10
 8000ade:	2000      	movs	r0, #0
 8000ae0:	f7ff fdc0 	bl	8000664 <M_GPIO_void_SetPinValue>
}
 8000ae4:	bf00      	nop
 8000ae6:	bd80      	pop	{r7, pc}

08000ae8 <H_SSD_void_DisplayNumber>:
void H_SSD_void_DisplayNumber(u8 number)
{
 8000ae8:	b580      	push	{r7, lr}
 8000aea:	b084      	sub	sp, #16
 8000aec:	af00      	add	r7, sp, #0
 8000aee:	4603      	mov	r3, r0
 8000af0:	71fb      	strb	r3, [r7, #7]
	if(number>99)
 8000af2:	79fb      	ldrb	r3, [r7, #7]
 8000af4:	2b63      	cmp	r3, #99	; 0x63
 8000af6:	f200 83a8 	bhi.w	800124a <H_SSD_void_DisplayNumber+0x762>
	{
		return;
	}
	u32 i ;
	u8 units =number % 10;
 8000afa:	79fa      	ldrb	r2, [r7, #7]
 8000afc:	4bcf      	ldr	r3, [pc, #828]	; (8000e3c <H_SSD_void_DisplayNumber+0x354>)
 8000afe:	fba3 1302 	umull	r1, r3, r3, r2
 8000b02:	08d9      	lsrs	r1, r3, #3
 8000b04:	460b      	mov	r3, r1
 8000b06:	009b      	lsls	r3, r3, #2
 8000b08:	440b      	add	r3, r1
 8000b0a:	005b      	lsls	r3, r3, #1
 8000b0c:	1ad3      	subs	r3, r2, r3
 8000b0e:	72fb      	strb	r3, [r7, #11]
	u8 tens = number/10;
 8000b10:	79fb      	ldrb	r3, [r7, #7]
 8000b12:	4aca      	ldr	r2, [pc, #808]	; (8000e3c <H_SSD_void_DisplayNumber+0x354>)
 8000b14:	fba2 2303 	umull	r2, r3, r2, r3
 8000b18:	08db      	lsrs	r3, r3, #3
 8000b1a:	72bb      	strb	r3, [r7, #10]
	for(i=0;i<SSD_DISPLAYY_TIME ;i++){
 8000b1c:	2300      	movs	r3, #0
 8000b1e:	60fb      	str	r3, [r7, #12]
 8000b20:	e38e      	b.n	8001240 <H_SSD_void_DisplayNumber+0x758>

		switch (units)
 8000b22:	7afb      	ldrb	r3, [r7, #11]
 8000b24:	2b09      	cmp	r3, #9
 8000b26:	f200 81b4 	bhi.w	8000e92 <H_SSD_void_DisplayNumber+0x3aa>
 8000b2a:	a201      	add	r2, pc, #4	; (adr r2, 8000b30 <H_SSD_void_DisplayNumber+0x48>)
 8000b2c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000b30:	08000b59 	.word	0x08000b59
 8000b34:	08000bab 	.word	0x08000bab
 8000b38:	08000bfd 	.word	0x08000bfd
 8000b3c:	08000c4f 	.word	0x08000c4f
 8000b40:	08000ca1 	.word	0x08000ca1
 8000b44:	08000cf3 	.word	0x08000cf3
 8000b48:	08000d45 	.word	0x08000d45
 8000b4c:	08000d97 	.word	0x08000d97
 8000b50:	08000de9 	.word	0x08000de9
 8000b54:	08000e41 	.word	0x08000e41
		{
		case 0:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000b58:	2201      	movs	r2, #1
 8000b5a:	2101      	movs	r1, #1
 8000b5c:	2000      	movs	r0, #0
 8000b5e:	f7ff fd81 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000b62:	2201      	movs	r2, #1
 8000b64:	2102      	movs	r1, #2
 8000b66:	2000      	movs	r0, #0
 8000b68:	f7ff fd7c 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000b6c:	2201      	movs	r2, #1
 8000b6e:	2103      	movs	r1, #3
 8000b70:	2000      	movs	r0, #0
 8000b72:	f7ff fd77 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8000b76:	2201      	movs	r2, #1
 8000b78:	2104      	movs	r1, #4
 8000b7a:	2000      	movs	r0, #0
 8000b7c:	f7ff fd72 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
 8000b80:	2201      	movs	r2, #1
 8000b82:	2105      	movs	r1, #5
 8000b84:	2000      	movs	r0, #0
 8000b86:	f7ff fd6d 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8000b8a:	2201      	movs	r2, #1
 8000b8c:	2106      	movs	r1, #6
 8000b8e:	2000      	movs	r0, #0
 8000b90:	f7ff fd68 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
 8000b94:	2200      	movs	r2, #0
 8000b96:	2107      	movs	r1, #7
 8000b98:	2000      	movs	r0, #0
 8000b9a:	f7ff fd63 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000b9e:	2200      	movs	r2, #0
 8000ba0:	2108      	movs	r1, #8
 8000ba2:	2000      	movs	r0, #0
 8000ba4:	f7ff fd5e 	bl	8000664 <M_GPIO_void_SetPinValue>
			break;
 8000ba8:	e173      	b.n	8000e92 <H_SSD_void_DisplayNumber+0x3aa>

		case 1:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,LOW);
 8000baa:	2200      	movs	r2, #0
 8000bac:	2101      	movs	r1, #1
 8000bae:	2000      	movs	r0, #0
 8000bb0:	f7ff fd58 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000bb4:	2201      	movs	r2, #1
 8000bb6:	2102      	movs	r1, #2
 8000bb8:	2000      	movs	r0, #0
 8000bba:	f7ff fd53 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000bbe:	2201      	movs	r2, #1
 8000bc0:	2103      	movs	r1, #3
 8000bc2:	2000      	movs	r0, #0
 8000bc4:	f7ff fd4e 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
 8000bc8:	2200      	movs	r2, #0
 8000bca:	2104      	movs	r1, #4
 8000bcc:	2000      	movs	r0, #0
 8000bce:	f7ff fd49 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 8000bd2:	2200      	movs	r2, #0
 8000bd4:	2105      	movs	r1, #5
 8000bd6:	2000      	movs	r0, #0
 8000bd8:	f7ff fd44 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
 8000bdc:	2200      	movs	r2, #0
 8000bde:	2106      	movs	r1, #6
 8000be0:	2000      	movs	r0, #0
 8000be2:	f7ff fd3f 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
 8000be6:	2200      	movs	r2, #0
 8000be8:	2107      	movs	r1, #7
 8000bea:	2000      	movs	r0, #0
 8000bec:	f7ff fd3a 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000bf0:	2200      	movs	r2, #0
 8000bf2:	2108      	movs	r1, #8
 8000bf4:	2000      	movs	r0, #0
 8000bf6:	f7ff fd35 	bl	8000664 <M_GPIO_void_SetPinValue>
			break;
 8000bfa:	e14a      	b.n	8000e92 <H_SSD_void_DisplayNumber+0x3aa>

		case 2:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000bfc:	2201      	movs	r2, #1
 8000bfe:	2101      	movs	r1, #1
 8000c00:	2000      	movs	r0, #0
 8000c02:	f7ff fd2f 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000c06:	2201      	movs	r2, #1
 8000c08:	2102      	movs	r1, #2
 8000c0a:	2000      	movs	r0, #0
 8000c0c:	f7ff fd2a 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,LOW);
 8000c10:	2200      	movs	r2, #0
 8000c12:	2103      	movs	r1, #3
 8000c14:	2000      	movs	r0, #0
 8000c16:	f7ff fd25 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8000c1a:	2201      	movs	r2, #1
 8000c1c:	2104      	movs	r1, #4
 8000c1e:	2000      	movs	r0, #0
 8000c20:	f7ff fd20 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
 8000c24:	2201      	movs	r2, #1
 8000c26:	2105      	movs	r1, #5
 8000c28:	2000      	movs	r0, #0
 8000c2a:	f7ff fd1b 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
 8000c2e:	2200      	movs	r2, #0
 8000c30:	2106      	movs	r1, #6
 8000c32:	2000      	movs	r0, #0
 8000c34:	f7ff fd16 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8000c38:	2201      	movs	r2, #1
 8000c3a:	2107      	movs	r1, #7
 8000c3c:	2000      	movs	r0, #0
 8000c3e:	f7ff fd11 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000c42:	2200      	movs	r2, #0
 8000c44:	2108      	movs	r1, #8
 8000c46:	2000      	movs	r0, #0
 8000c48:	f7ff fd0c 	bl	8000664 <M_GPIO_void_SetPinValue>
			break;
 8000c4c:	e121      	b.n	8000e92 <H_SSD_void_DisplayNumber+0x3aa>

		case 3:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000c4e:	2201      	movs	r2, #1
 8000c50:	2101      	movs	r1, #1
 8000c52:	2000      	movs	r0, #0
 8000c54:	f7ff fd06 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000c58:	2201      	movs	r2, #1
 8000c5a:	2102      	movs	r1, #2
 8000c5c:	2000      	movs	r0, #0
 8000c5e:	f7ff fd01 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000c62:	2201      	movs	r2, #1
 8000c64:	2103      	movs	r1, #3
 8000c66:	2000      	movs	r0, #0
 8000c68:	f7ff fcfc 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8000c6c:	2201      	movs	r2, #1
 8000c6e:	2104      	movs	r1, #4
 8000c70:	2000      	movs	r0, #0
 8000c72:	f7ff fcf7 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 8000c76:	2200      	movs	r2, #0
 8000c78:	2105      	movs	r1, #5
 8000c7a:	2000      	movs	r0, #0
 8000c7c:	f7ff fcf2 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
 8000c80:	2200      	movs	r2, #0
 8000c82:	2106      	movs	r1, #6
 8000c84:	2000      	movs	r0, #0
 8000c86:	f7ff fced 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8000c8a:	2201      	movs	r2, #1
 8000c8c:	2107      	movs	r1, #7
 8000c8e:	2000      	movs	r0, #0
 8000c90:	f7ff fce8 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000c94:	2200      	movs	r2, #0
 8000c96:	2108      	movs	r1, #8
 8000c98:	2000      	movs	r0, #0
 8000c9a:	f7ff fce3 	bl	8000664 <M_GPIO_void_SetPinValue>
			break;
 8000c9e:	e0f8      	b.n	8000e92 <H_SSD_void_DisplayNumber+0x3aa>

		case 4:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,LOW);
 8000ca0:	2200      	movs	r2, #0
 8000ca2:	2101      	movs	r1, #1
 8000ca4:	2000      	movs	r0, #0
 8000ca6:	f7ff fcdd 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000caa:	2201      	movs	r2, #1
 8000cac:	2102      	movs	r1, #2
 8000cae:	2000      	movs	r0, #0
 8000cb0:	f7ff fcd8 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000cb4:	2201      	movs	r2, #1
 8000cb6:	2103      	movs	r1, #3
 8000cb8:	2000      	movs	r0, #0
 8000cba:	f7ff fcd3 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
 8000cbe:	2200      	movs	r2, #0
 8000cc0:	2104      	movs	r1, #4
 8000cc2:	2000      	movs	r0, #0
 8000cc4:	f7ff fcce 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 8000cc8:	2200      	movs	r2, #0
 8000cca:	2105      	movs	r1, #5
 8000ccc:	2000      	movs	r0, #0
 8000cce:	f7ff fcc9 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8000cd2:	2201      	movs	r2, #1
 8000cd4:	2106      	movs	r1, #6
 8000cd6:	2000      	movs	r0, #0
 8000cd8:	f7ff fcc4 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8000cdc:	2201      	movs	r2, #1
 8000cde:	2107      	movs	r1, #7
 8000ce0:	2000      	movs	r0, #0
 8000ce2:	f7ff fcbf 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000ce6:	2200      	movs	r2, #0
 8000ce8:	2108      	movs	r1, #8
 8000cea:	2000      	movs	r0, #0
 8000cec:	f7ff fcba 	bl	8000664 <M_GPIO_void_SetPinValue>
			break;
 8000cf0:	e0cf      	b.n	8000e92 <H_SSD_void_DisplayNumber+0x3aa>

		case 5:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000cf2:	2201      	movs	r2, #1
 8000cf4:	2101      	movs	r1, #1
 8000cf6:	2000      	movs	r0, #0
 8000cf8:	f7ff fcb4 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,LOW);
 8000cfc:	2200      	movs	r2, #0
 8000cfe:	2102      	movs	r1, #2
 8000d00:	2000      	movs	r0, #0
 8000d02:	f7ff fcaf 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000d06:	2201      	movs	r2, #1
 8000d08:	2103      	movs	r1, #3
 8000d0a:	2000      	movs	r0, #0
 8000d0c:	f7ff fcaa 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8000d10:	2201      	movs	r2, #1
 8000d12:	2104      	movs	r1, #4
 8000d14:	2000      	movs	r0, #0
 8000d16:	f7ff fca5 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 8000d1a:	2200      	movs	r2, #0
 8000d1c:	2105      	movs	r1, #5
 8000d1e:	2000      	movs	r0, #0
 8000d20:	f7ff fca0 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8000d24:	2201      	movs	r2, #1
 8000d26:	2106      	movs	r1, #6
 8000d28:	2000      	movs	r0, #0
 8000d2a:	f7ff fc9b 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8000d2e:	2201      	movs	r2, #1
 8000d30:	2107      	movs	r1, #7
 8000d32:	2000      	movs	r0, #0
 8000d34:	f7ff fc96 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000d38:	2200      	movs	r2, #0
 8000d3a:	2108      	movs	r1, #8
 8000d3c:	2000      	movs	r0, #0
 8000d3e:	f7ff fc91 	bl	8000664 <M_GPIO_void_SetPinValue>
			break;
 8000d42:	e0a6      	b.n	8000e92 <H_SSD_void_DisplayNumber+0x3aa>
		case 6:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000d44:	2201      	movs	r2, #1
 8000d46:	2101      	movs	r1, #1
 8000d48:	2000      	movs	r0, #0
 8000d4a:	f7ff fc8b 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,LOW);
 8000d4e:	2200      	movs	r2, #0
 8000d50:	2102      	movs	r1, #2
 8000d52:	2000      	movs	r0, #0
 8000d54:	f7ff fc86 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000d58:	2201      	movs	r2, #1
 8000d5a:	2103      	movs	r1, #3
 8000d5c:	2000      	movs	r0, #0
 8000d5e:	f7ff fc81 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8000d62:	2201      	movs	r2, #1
 8000d64:	2104      	movs	r1, #4
 8000d66:	2000      	movs	r0, #0
 8000d68:	f7ff fc7c 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
 8000d6c:	2201      	movs	r2, #1
 8000d6e:	2105      	movs	r1, #5
 8000d70:	2000      	movs	r0, #0
 8000d72:	f7ff fc77 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8000d76:	2201      	movs	r2, #1
 8000d78:	2106      	movs	r1, #6
 8000d7a:	2000      	movs	r0, #0
 8000d7c:	f7ff fc72 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8000d80:	2201      	movs	r2, #1
 8000d82:	2107      	movs	r1, #7
 8000d84:	2000      	movs	r0, #0
 8000d86:	f7ff fc6d 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000d8a:	2200      	movs	r2, #0
 8000d8c:	2108      	movs	r1, #8
 8000d8e:	2000      	movs	r0, #0
 8000d90:	f7ff fc68 	bl	8000664 <M_GPIO_void_SetPinValue>
			break;
 8000d94:	e07d      	b.n	8000e92 <H_SSD_void_DisplayNumber+0x3aa>
		case 7:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000d96:	2201      	movs	r2, #1
 8000d98:	2101      	movs	r1, #1
 8000d9a:	2000      	movs	r0, #0
 8000d9c:	f7ff fc62 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000da0:	2201      	movs	r2, #1
 8000da2:	2102      	movs	r1, #2
 8000da4:	2000      	movs	r0, #0
 8000da6:	f7ff fc5d 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000daa:	2201      	movs	r2, #1
 8000dac:	2103      	movs	r1, #3
 8000dae:	2000      	movs	r0, #0
 8000db0:	f7ff fc58 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
 8000db4:	2200      	movs	r2, #0
 8000db6:	2104      	movs	r1, #4
 8000db8:	2000      	movs	r0, #0
 8000dba:	f7ff fc53 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 8000dbe:	2200      	movs	r2, #0
 8000dc0:	2105      	movs	r1, #5
 8000dc2:	2000      	movs	r0, #0
 8000dc4:	f7ff fc4e 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
 8000dc8:	2200      	movs	r2, #0
 8000dca:	2106      	movs	r1, #6
 8000dcc:	2000      	movs	r0, #0
 8000dce:	f7ff fc49 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
 8000dd2:	2200      	movs	r2, #0
 8000dd4:	2107      	movs	r1, #7
 8000dd6:	2000      	movs	r0, #0
 8000dd8:	f7ff fc44 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000ddc:	2200      	movs	r2, #0
 8000dde:	2108      	movs	r1, #8
 8000de0:	2000      	movs	r0, #0
 8000de2:	f7ff fc3f 	bl	8000664 <M_GPIO_void_SetPinValue>
			break;
 8000de6:	e054      	b.n	8000e92 <H_SSD_void_DisplayNumber+0x3aa>
		case 8:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000de8:	2201      	movs	r2, #1
 8000dea:	2101      	movs	r1, #1
 8000dec:	2000      	movs	r0, #0
 8000dee:	f7ff fc39 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000df2:	2201      	movs	r2, #1
 8000df4:	2102      	movs	r1, #2
 8000df6:	2000      	movs	r0, #0
 8000df8:	f7ff fc34 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000dfc:	2201      	movs	r2, #1
 8000dfe:	2103      	movs	r1, #3
 8000e00:	2000      	movs	r0, #0
 8000e02:	f7ff fc2f 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8000e06:	2201      	movs	r2, #1
 8000e08:	2104      	movs	r1, #4
 8000e0a:	2000      	movs	r0, #0
 8000e0c:	f7ff fc2a 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
 8000e10:	2201      	movs	r2, #1
 8000e12:	2105      	movs	r1, #5
 8000e14:	2000      	movs	r0, #0
 8000e16:	f7ff fc25 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8000e1a:	2201      	movs	r2, #1
 8000e1c:	2106      	movs	r1, #6
 8000e1e:	2000      	movs	r0, #0
 8000e20:	f7ff fc20 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8000e24:	2201      	movs	r2, #1
 8000e26:	2107      	movs	r1, #7
 8000e28:	2000      	movs	r0, #0
 8000e2a:	f7ff fc1b 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000e2e:	2200      	movs	r2, #0
 8000e30:	2108      	movs	r1, #8
 8000e32:	2000      	movs	r0, #0
 8000e34:	f7ff fc16 	bl	8000664 <M_GPIO_void_SetPinValue>
			break;
 8000e38:	e02b      	b.n	8000e92 <H_SSD_void_DisplayNumber+0x3aa>
 8000e3a:	bf00      	nop
 8000e3c:	cccccccd 	.word	0xcccccccd
		case 9:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000e40:	2201      	movs	r2, #1
 8000e42:	2101      	movs	r1, #1
 8000e44:	2000      	movs	r0, #0
 8000e46:	f7ff fc0d 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000e4a:	2201      	movs	r2, #1
 8000e4c:	2102      	movs	r1, #2
 8000e4e:	2000      	movs	r0, #0
 8000e50:	f7ff fc08 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000e54:	2201      	movs	r2, #1
 8000e56:	2103      	movs	r1, #3
 8000e58:	2000      	movs	r0, #0
 8000e5a:	f7ff fc03 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8000e5e:	2201      	movs	r2, #1
 8000e60:	2104      	movs	r1, #4
 8000e62:	2000      	movs	r0, #0
 8000e64:	f7ff fbfe 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 8000e68:	2200      	movs	r2, #0
 8000e6a:	2105      	movs	r1, #5
 8000e6c:	2000      	movs	r0, #0
 8000e6e:	f7ff fbf9 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8000e72:	2201      	movs	r2, #1
 8000e74:	2106      	movs	r1, #6
 8000e76:	2000      	movs	r0, #0
 8000e78:	f7ff fbf4 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8000e7c:	2201      	movs	r2, #1
 8000e7e:	2107      	movs	r1, #7
 8000e80:	2000      	movs	r0, #0
 8000e82:	f7ff fbef 	bl	8000664 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000e86:	2200      	movs	r2, #0
 8000e88:	2108      	movs	r1, #8
 8000e8a:	2000      	movs	r0, #0
 8000e8c:	f7ff fbea 	bl	8000664 <M_GPIO_void_SetPinValue>
			break;
 8000e90:	bf00      	nop


		}
		//enable digit 1
		//disable digit 2
		M_GPIO_void_SetPinValue(SSD_DIG_1_EN_PORT,SSD_DIG_1_EN_PIN,HIGH);
 8000e92:	2201      	movs	r2, #1
 8000e94:	2109      	movs	r1, #9
 8000e96:	2000      	movs	r0, #0
 8000e98:	f7ff fbe4 	bl	8000664 <M_GPIO_void_SetPinValue>
		M_GPIO_void_SetPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,LOW);
 8000e9c:	2200      	movs	r2, #0
 8000e9e:	210a      	movs	r1, #10
 8000ea0:	2000      	movs	r0, #0
 8000ea2:	f7ff fbdf 	bl	8000664 <M_GPIO_void_SetPinValue>
		 _delay_ms(200);
 8000ea6:	20c8      	movs	r0, #200	; 0xc8
 8000ea8:	f7ff fa6c 	bl	8000384 <_delay_ms>
		M_GPIO_void_SetPinValue(SSD_DIG_1_EN_PORT,SSD_DIG_1_EN_PIN,LOW);
 8000eac:	2200      	movs	r2, #0
 8000eae:	2109      	movs	r1, #9
 8000eb0:	2000      	movs	r0, #0
 8000eb2:	f7ff fbd7 	bl	8000664 <M_GPIO_void_SetPinValue>
		switch (tens)
 8000eb6:	7abb      	ldrb	r3, [r7, #10]
 8000eb8:	2b09      	cmp	r3, #9
 8000eba:	f200 81b1 	bhi.w	8001220 <H_SSD_void_DisplayNumber+0x738>
 8000ebe:	a201      	add	r2, pc, #4	; (adr r2, 8000ec4 <H_SSD_void_DisplayNumber+0x3dc>)
 8000ec0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000ec4:	08000eed 	.word	0x08000eed
 8000ec8:	08000f3f 	.word	0x08000f3f
 8000ecc:	08000f91 	.word	0x08000f91
 8000ed0:	08000fe3 	.word	0x08000fe3
 8000ed4:	08001035 	.word	0x08001035
 8000ed8:	08001087 	.word	0x08001087
 8000edc:	080010d9 	.word	0x080010d9
 8000ee0:	0800112b 	.word	0x0800112b
 8000ee4:	0800117d 	.word	0x0800117d
 8000ee8:	080011cf 	.word	0x080011cf
		{
		       case 0:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000eec:	2201      	movs	r2, #1
 8000eee:	2101      	movs	r1, #1
 8000ef0:	2000      	movs	r0, #0
 8000ef2:	f7ff fbb7 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000ef6:	2201      	movs	r2, #1
 8000ef8:	2102      	movs	r1, #2
 8000efa:	2000      	movs	r0, #0
 8000efc:	f7ff fbb2 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000f00:	2201      	movs	r2, #1
 8000f02:	2103      	movs	r1, #3
 8000f04:	2000      	movs	r0, #0
 8000f06:	f7ff fbad 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8000f0a:	2201      	movs	r2, #1
 8000f0c:	2104      	movs	r1, #4
 8000f0e:	2000      	movs	r0, #0
 8000f10:	f7ff fba8 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
 8000f14:	2201      	movs	r2, #1
 8000f16:	2105      	movs	r1, #5
 8000f18:	2000      	movs	r0, #0
 8000f1a:	f7ff fba3 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8000f1e:	2201      	movs	r2, #1
 8000f20:	2106      	movs	r1, #6
 8000f22:	2000      	movs	r0, #0
 8000f24:	f7ff fb9e 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
 8000f28:	2200      	movs	r2, #0
 8000f2a:	2107      	movs	r1, #7
 8000f2c:	2000      	movs	r0, #0
 8000f2e:	f7ff fb99 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000f32:	2200      	movs	r2, #0
 8000f34:	2108      	movs	r1, #8
 8000f36:	2000      	movs	r0, #0
 8000f38:	f7ff fb94 	bl	8000664 <M_GPIO_void_SetPinValue>
					break;
 8000f3c:	e170      	b.n	8001220 <H_SSD_void_DisplayNumber+0x738>

				case 1:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,LOW);
 8000f3e:	2200      	movs	r2, #0
 8000f40:	2101      	movs	r1, #1
 8000f42:	2000      	movs	r0, #0
 8000f44:	f7ff fb8e 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000f48:	2201      	movs	r2, #1
 8000f4a:	2102      	movs	r1, #2
 8000f4c:	2000      	movs	r0, #0
 8000f4e:	f7ff fb89 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000f52:	2201      	movs	r2, #1
 8000f54:	2103      	movs	r1, #3
 8000f56:	2000      	movs	r0, #0
 8000f58:	f7ff fb84 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
 8000f5c:	2200      	movs	r2, #0
 8000f5e:	2104      	movs	r1, #4
 8000f60:	2000      	movs	r0, #0
 8000f62:	f7ff fb7f 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 8000f66:	2200      	movs	r2, #0
 8000f68:	2105      	movs	r1, #5
 8000f6a:	2000      	movs	r0, #0
 8000f6c:	f7ff fb7a 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
 8000f70:	2200      	movs	r2, #0
 8000f72:	2106      	movs	r1, #6
 8000f74:	2000      	movs	r0, #0
 8000f76:	f7ff fb75 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
 8000f7a:	2200      	movs	r2, #0
 8000f7c:	2107      	movs	r1, #7
 8000f7e:	2000      	movs	r0, #0
 8000f80:	f7ff fb70 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000f84:	2200      	movs	r2, #0
 8000f86:	2108      	movs	r1, #8
 8000f88:	2000      	movs	r0, #0
 8000f8a:	f7ff fb6b 	bl	8000664 <M_GPIO_void_SetPinValue>
					break;
 8000f8e:	e147      	b.n	8001220 <H_SSD_void_DisplayNumber+0x738>

				case 2:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000f90:	2201      	movs	r2, #1
 8000f92:	2101      	movs	r1, #1
 8000f94:	2000      	movs	r0, #0
 8000f96:	f7ff fb65 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000f9a:	2201      	movs	r2, #1
 8000f9c:	2102      	movs	r1, #2
 8000f9e:	2000      	movs	r0, #0
 8000fa0:	f7ff fb60 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,LOW);
 8000fa4:	2200      	movs	r2, #0
 8000fa6:	2103      	movs	r1, #3
 8000fa8:	2000      	movs	r0, #0
 8000faa:	f7ff fb5b 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8000fae:	2201      	movs	r2, #1
 8000fb0:	2104      	movs	r1, #4
 8000fb2:	2000      	movs	r0, #0
 8000fb4:	f7ff fb56 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
 8000fb8:	2201      	movs	r2, #1
 8000fba:	2105      	movs	r1, #5
 8000fbc:	2000      	movs	r0, #0
 8000fbe:	f7ff fb51 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
 8000fc2:	2200      	movs	r2, #0
 8000fc4:	2106      	movs	r1, #6
 8000fc6:	2000      	movs	r0, #0
 8000fc8:	f7ff fb4c 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8000fcc:	2201      	movs	r2, #1
 8000fce:	2107      	movs	r1, #7
 8000fd0:	2000      	movs	r0, #0
 8000fd2:	f7ff fb47 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000fd6:	2200      	movs	r2, #0
 8000fd8:	2108      	movs	r1, #8
 8000fda:	2000      	movs	r0, #0
 8000fdc:	f7ff fb42 	bl	8000664 <M_GPIO_void_SetPinValue>
					break;
 8000fe0:	e11e      	b.n	8001220 <H_SSD_void_DisplayNumber+0x738>

				case 3:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000fe2:	2201      	movs	r2, #1
 8000fe4:	2101      	movs	r1, #1
 8000fe6:	2000      	movs	r0, #0
 8000fe8:	f7ff fb3c 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000fec:	2201      	movs	r2, #1
 8000fee:	2102      	movs	r1, #2
 8000ff0:	2000      	movs	r0, #0
 8000ff2:	f7ff fb37 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000ff6:	2201      	movs	r2, #1
 8000ff8:	2103      	movs	r1, #3
 8000ffa:	2000      	movs	r0, #0
 8000ffc:	f7ff fb32 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8001000:	2201      	movs	r2, #1
 8001002:	2104      	movs	r1, #4
 8001004:	2000      	movs	r0, #0
 8001006:	f7ff fb2d 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 800100a:	2200      	movs	r2, #0
 800100c:	2105      	movs	r1, #5
 800100e:	2000      	movs	r0, #0
 8001010:	f7ff fb28 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
 8001014:	2200      	movs	r2, #0
 8001016:	2106      	movs	r1, #6
 8001018:	2000      	movs	r0, #0
 800101a:	f7ff fb23 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 800101e:	2201      	movs	r2, #1
 8001020:	2107      	movs	r1, #7
 8001022:	2000      	movs	r0, #0
 8001024:	f7ff fb1e 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8001028:	2200      	movs	r2, #0
 800102a:	2108      	movs	r1, #8
 800102c:	2000      	movs	r0, #0
 800102e:	f7ff fb19 	bl	8000664 <M_GPIO_void_SetPinValue>
					break;
 8001032:	e0f5      	b.n	8001220 <H_SSD_void_DisplayNumber+0x738>

				case 4:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,LOW);
 8001034:	2200      	movs	r2, #0
 8001036:	2101      	movs	r1, #1
 8001038:	2000      	movs	r0, #0
 800103a:	f7ff fb13 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 800103e:	2201      	movs	r2, #1
 8001040:	2102      	movs	r1, #2
 8001042:	2000      	movs	r0, #0
 8001044:	f7ff fb0e 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8001048:	2201      	movs	r2, #1
 800104a:	2103      	movs	r1, #3
 800104c:	2000      	movs	r0, #0
 800104e:	f7ff fb09 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
 8001052:	2200      	movs	r2, #0
 8001054:	2104      	movs	r1, #4
 8001056:	2000      	movs	r0, #0
 8001058:	f7ff fb04 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 800105c:	2200      	movs	r2, #0
 800105e:	2105      	movs	r1, #5
 8001060:	2000      	movs	r0, #0
 8001062:	f7ff faff 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8001066:	2201      	movs	r2, #1
 8001068:	2106      	movs	r1, #6
 800106a:	2000      	movs	r0, #0
 800106c:	f7ff fafa 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8001070:	2201      	movs	r2, #1
 8001072:	2107      	movs	r1, #7
 8001074:	2000      	movs	r0, #0
 8001076:	f7ff faf5 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 800107a:	2200      	movs	r2, #0
 800107c:	2108      	movs	r1, #8
 800107e:	2000      	movs	r0, #0
 8001080:	f7ff faf0 	bl	8000664 <M_GPIO_void_SetPinValue>
					break;
 8001084:	e0cc      	b.n	8001220 <H_SSD_void_DisplayNumber+0x738>

				case 5:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8001086:	2201      	movs	r2, #1
 8001088:	2101      	movs	r1, #1
 800108a:	2000      	movs	r0, #0
 800108c:	f7ff faea 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,LOW);
 8001090:	2200      	movs	r2, #0
 8001092:	2102      	movs	r1, #2
 8001094:	2000      	movs	r0, #0
 8001096:	f7ff fae5 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 800109a:	2201      	movs	r2, #1
 800109c:	2103      	movs	r1, #3
 800109e:	2000      	movs	r0, #0
 80010a0:	f7ff fae0 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 80010a4:	2201      	movs	r2, #1
 80010a6:	2104      	movs	r1, #4
 80010a8:	2000      	movs	r0, #0
 80010aa:	f7ff fadb 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 80010ae:	2200      	movs	r2, #0
 80010b0:	2105      	movs	r1, #5
 80010b2:	2000      	movs	r0, #0
 80010b4:	f7ff fad6 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 80010b8:	2201      	movs	r2, #1
 80010ba:	2106      	movs	r1, #6
 80010bc:	2000      	movs	r0, #0
 80010be:	f7ff fad1 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 80010c2:	2201      	movs	r2, #1
 80010c4:	2107      	movs	r1, #7
 80010c6:	2000      	movs	r0, #0
 80010c8:	f7ff facc 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 80010cc:	2200      	movs	r2, #0
 80010ce:	2108      	movs	r1, #8
 80010d0:	2000      	movs	r0, #0
 80010d2:	f7ff fac7 	bl	8000664 <M_GPIO_void_SetPinValue>
					break;
 80010d6:	e0a3      	b.n	8001220 <H_SSD_void_DisplayNumber+0x738>
				case 6:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 80010d8:	2201      	movs	r2, #1
 80010da:	2101      	movs	r1, #1
 80010dc:	2000      	movs	r0, #0
 80010de:	f7ff fac1 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,LOW);
 80010e2:	2200      	movs	r2, #0
 80010e4:	2102      	movs	r1, #2
 80010e6:	2000      	movs	r0, #0
 80010e8:	f7ff fabc 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 80010ec:	2201      	movs	r2, #1
 80010ee:	2103      	movs	r1, #3
 80010f0:	2000      	movs	r0, #0
 80010f2:	f7ff fab7 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 80010f6:	2201      	movs	r2, #1
 80010f8:	2104      	movs	r1, #4
 80010fa:	2000      	movs	r0, #0
 80010fc:	f7ff fab2 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
 8001100:	2201      	movs	r2, #1
 8001102:	2105      	movs	r1, #5
 8001104:	2000      	movs	r0, #0
 8001106:	f7ff faad 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 800110a:	2201      	movs	r2, #1
 800110c:	2106      	movs	r1, #6
 800110e:	2000      	movs	r0, #0
 8001110:	f7ff faa8 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8001114:	2201      	movs	r2, #1
 8001116:	2107      	movs	r1, #7
 8001118:	2000      	movs	r0, #0
 800111a:	f7ff faa3 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 800111e:	2200      	movs	r2, #0
 8001120:	2108      	movs	r1, #8
 8001122:	2000      	movs	r0, #0
 8001124:	f7ff fa9e 	bl	8000664 <M_GPIO_void_SetPinValue>
					break;
 8001128:	e07a      	b.n	8001220 <H_SSD_void_DisplayNumber+0x738>
				case 7:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 800112a:	2201      	movs	r2, #1
 800112c:	2101      	movs	r1, #1
 800112e:	2000      	movs	r0, #0
 8001130:	f7ff fa98 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8001134:	2201      	movs	r2, #1
 8001136:	2102      	movs	r1, #2
 8001138:	2000      	movs	r0, #0
 800113a:	f7ff fa93 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 800113e:	2201      	movs	r2, #1
 8001140:	2103      	movs	r1, #3
 8001142:	2000      	movs	r0, #0
 8001144:	f7ff fa8e 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
 8001148:	2200      	movs	r2, #0
 800114a:	2104      	movs	r1, #4
 800114c:	2000      	movs	r0, #0
 800114e:	f7ff fa89 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 8001152:	2200      	movs	r2, #0
 8001154:	2105      	movs	r1, #5
 8001156:	2000      	movs	r0, #0
 8001158:	f7ff fa84 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
 800115c:	2200      	movs	r2, #0
 800115e:	2106      	movs	r1, #6
 8001160:	2000      	movs	r0, #0
 8001162:	f7ff fa7f 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
 8001166:	2200      	movs	r2, #0
 8001168:	2107      	movs	r1, #7
 800116a:	2000      	movs	r0, #0
 800116c:	f7ff fa7a 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8001170:	2200      	movs	r2, #0
 8001172:	2108      	movs	r1, #8
 8001174:	2000      	movs	r0, #0
 8001176:	f7ff fa75 	bl	8000664 <M_GPIO_void_SetPinValue>
					break;
 800117a:	e051      	b.n	8001220 <H_SSD_void_DisplayNumber+0x738>
				case 8:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 800117c:	2201      	movs	r2, #1
 800117e:	2101      	movs	r1, #1
 8001180:	2000      	movs	r0, #0
 8001182:	f7ff fa6f 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8001186:	2201      	movs	r2, #1
 8001188:	2102      	movs	r1, #2
 800118a:	2000      	movs	r0, #0
 800118c:	f7ff fa6a 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8001190:	2201      	movs	r2, #1
 8001192:	2103      	movs	r1, #3
 8001194:	2000      	movs	r0, #0
 8001196:	f7ff fa65 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 800119a:	2201      	movs	r2, #1
 800119c:	2104      	movs	r1, #4
 800119e:	2000      	movs	r0, #0
 80011a0:	f7ff fa60 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
 80011a4:	2201      	movs	r2, #1
 80011a6:	2105      	movs	r1, #5
 80011a8:	2000      	movs	r0, #0
 80011aa:	f7ff fa5b 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 80011ae:	2201      	movs	r2, #1
 80011b0:	2106      	movs	r1, #6
 80011b2:	2000      	movs	r0, #0
 80011b4:	f7ff fa56 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 80011b8:	2201      	movs	r2, #1
 80011ba:	2107      	movs	r1, #7
 80011bc:	2000      	movs	r0, #0
 80011be:	f7ff fa51 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 80011c2:	2200      	movs	r2, #0
 80011c4:	2108      	movs	r1, #8
 80011c6:	2000      	movs	r0, #0
 80011c8:	f7ff fa4c 	bl	8000664 <M_GPIO_void_SetPinValue>
					break;
 80011cc:	e028      	b.n	8001220 <H_SSD_void_DisplayNumber+0x738>
				case 9:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 80011ce:	2201      	movs	r2, #1
 80011d0:	2101      	movs	r1, #1
 80011d2:	2000      	movs	r0, #0
 80011d4:	f7ff fa46 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 80011d8:	2201      	movs	r2, #1
 80011da:	2102      	movs	r1, #2
 80011dc:	2000      	movs	r0, #0
 80011de:	f7ff fa41 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 80011e2:	2201      	movs	r2, #1
 80011e4:	2103      	movs	r1, #3
 80011e6:	2000      	movs	r0, #0
 80011e8:	f7ff fa3c 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 80011ec:	2201      	movs	r2, #1
 80011ee:	2104      	movs	r1, #4
 80011f0:	2000      	movs	r0, #0
 80011f2:	f7ff fa37 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 80011f6:	2200      	movs	r2, #0
 80011f8:	2105      	movs	r1, #5
 80011fa:	2000      	movs	r0, #0
 80011fc:	f7ff fa32 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8001200:	2201      	movs	r2, #1
 8001202:	2106      	movs	r1, #6
 8001204:	2000      	movs	r0, #0
 8001206:	f7ff fa2d 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 800120a:	2201      	movs	r2, #1
 800120c:	2107      	movs	r1, #7
 800120e:	2000      	movs	r0, #0
 8001210:	f7ff fa28 	bl	8000664 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8001214:	2200      	movs	r2, #0
 8001216:	2108      	movs	r1, #8
 8001218:	2000      	movs	r0, #0
 800121a:	f7ff fa23 	bl	8000664 <M_GPIO_void_SetPinValue>
					break;
 800121e:	bf00      	nop



				}
		//enable digit 2
		M_GPIO_void_SetPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,HIGH);
 8001220:	2201      	movs	r2, #1
 8001222:	210a      	movs	r1, #10
 8001224:	2000      	movs	r0, #0
 8001226:	f7ff fa1d 	bl	8000664 <M_GPIO_void_SetPinValue>

		 _delay_ms(200);
 800122a:	20c8      	movs	r0, #200	; 0xc8
 800122c:	f7ff f8aa 	bl	8000384 <_delay_ms>
		M_GPIO_void_SetPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,LOW);
 8001230:	2200      	movs	r2, #0
 8001232:	210a      	movs	r1, #10
 8001234:	2000      	movs	r0, #0
 8001236:	f7ff fa15 	bl	8000664 <M_GPIO_void_SetPinValue>
	for(i=0;i<SSD_DISPLAYY_TIME ;i++){
 800123a:	68fb      	ldr	r3, [r7, #12]
 800123c:	3301      	adds	r3, #1
 800123e:	60fb      	str	r3, [r7, #12]
 8001240:	68fb      	ldr	r3, [r7, #12]
 8001242:	2b13      	cmp	r3, #19
 8001244:	f67f ac6d 	bls.w	8000b22 <H_SSD_void_DisplayNumber+0x3a>
 8001248:	e000      	b.n	800124c <H_SSD_void_DisplayNumber+0x764>
		return;
 800124a:	bf00      	nop
	}
}
 800124c:	3710      	adds	r7, #16
 800124e:	46bd      	mov	sp, r7
 8001250:	bd80      	pop	{r7, pc}
 8001252:	bf00      	nop

08001254 <STK_voidBusyWait>:
	#endif
		
}

void	STK_voidBusyWait(u32 Ticks)
{
 8001254:	b480      	push	{r7}
 8001256:	b083      	sub	sp, #12
 8001258:	af00      	add	r7, sp, #0
 800125a:	6078      	str	r0, [r7, #4]
	/*		Load Ticks to Load Register		*/
	STK -> LOAD	= Ticks;
 800125c:	4a11      	ldr	r2, [pc, #68]	; (80012a4 <STK_voidBusyWait+0x50>)
 800125e:	687b      	ldr	r3, [r7, #4]
 8001260:	6053      	str	r3, [r2, #4]
	/*		Start Timer 					*/
	SET_BIT(STK -> CTRL , 0);
 8001262:	4b10      	ldr	r3, [pc, #64]	; (80012a4 <STK_voidBusyWait+0x50>)
 8001264:	681b      	ldr	r3, [r3, #0]
 8001266:	4a0f      	ldr	r2, [pc, #60]	; (80012a4 <STK_voidBusyWait+0x50>)
 8001268:	f043 0301 	orr.w	r3, r3, #1
 800126c:	6013      	str	r3, [r2, #0]
	/*		Wait till the flag raised 		*/
	while((GET_BIT(STK -> CTRL , 16))== 0)
 800126e:	e000      	b.n	8001272 <STK_voidBusyWait+0x1e>
	{
		asm("NOP");
 8001270:	bf00      	nop
	while((GET_BIT(STK -> CTRL , 16))== 0)
 8001272:	4b0c      	ldr	r3, [pc, #48]	; (80012a4 <STK_voidBusyWait+0x50>)
 8001274:	681b      	ldr	r3, [r3, #0]
 8001276:	0c1b      	lsrs	r3, r3, #16
 8001278:	f003 0301 	and.w	r3, r3, #1
 800127c:	2b00      	cmp	r3, #0
 800127e:	d0f7      	beq.n	8001270 <STK_voidBusyWait+0x1c>
	}
	/*		Stop Timer 						*/
	CLR_BIT(STK -> CTRL , 0);
 8001280:	4b08      	ldr	r3, [pc, #32]	; (80012a4 <STK_voidBusyWait+0x50>)
 8001282:	681b      	ldr	r3, [r3, #0]
 8001284:	4a07      	ldr	r2, [pc, #28]	; (80012a4 <STK_voidBusyWait+0x50>)
 8001286:	f023 0301 	bic.w	r3, r3, #1
 800128a:	6013      	str	r3, [r2, #0]
	STK -> LOAD	= 0;
 800128c:	4b05      	ldr	r3, [pc, #20]	; (80012a4 <STK_voidBusyWait+0x50>)
 800128e:	2200      	movs	r2, #0
 8001290:	605a      	str	r2, [r3, #4]
	STK -> VAL	= 0;
 8001292:	4b04      	ldr	r3, [pc, #16]	; (80012a4 <STK_voidBusyWait+0x50>)
 8001294:	2200      	movs	r2, #0
 8001296:	609a      	str	r2, [r3, #8]
	
}
 8001298:	bf00      	nop
 800129a:	370c      	adds	r7, #12
 800129c:	46bd      	mov	sp, r7
 800129e:	bc80      	pop	{r7}
 80012a0:	4770      	bx	lr
 80012a2:	bf00      	nop
 80012a4:	e000e010 	.word	0xe000e010

080012a8 <SysTick_Handler>:
	Local_u32RemainingTime =  (STK -> VAL);
	return Local_u32RemainingTime;
}
//Core Peripheral
void	SysTick_Handler(void)
{
 80012a8:	b580      	push	{r7, lr}
 80012aa:	b082      	sub	sp, #8
 80012ac:	af00      	add	r7, sp, #0
	u8 Local_u8Temp ;
	if(STK_u8ModeOfInterval == STK_SINGLE_INTERVAL)
 80012ae:	4b12      	ldr	r3, [pc, #72]	; (80012f8 <SysTick_Handler+0x50>)
 80012b0:	781b      	ldrb	r3, [r3, #0]
 80012b2:	2b02      	cmp	r3, #2
 80012b4:	d111      	bne.n	80012da <SysTick_Handler+0x32>
	{
		/*	1- Disable the Interrupt 	*/
			CLR_BIT(STK -> CTRL , 1);
 80012b6:	4b11      	ldr	r3, [pc, #68]	; (80012fc <SysTick_Handler+0x54>)
 80012b8:	681b      	ldr	r3, [r3, #0]
 80012ba:	4a10      	ldr	r2, [pc, #64]	; (80012fc <SysTick_Handler+0x54>)
 80012bc:	f023 0302 	bic.w	r3, r3, #2
 80012c0:	6013      	str	r3, [r2, #0]
		/*	2- Stop the timer			*/
			CLR_BIT(STK -> CTRL , 0);
 80012c2:	4b0e      	ldr	r3, [pc, #56]	; (80012fc <SysTick_Handler+0x54>)
 80012c4:	681b      	ldr	r3, [r3, #0]
 80012c6:	4a0d      	ldr	r2, [pc, #52]	; (80012fc <SysTick_Handler+0x54>)
 80012c8:	f023 0301 	bic.w	r3, r3, #1
 80012cc:	6013      	str	r3, [r2, #0]
			STK -> LOAD	= 0;
 80012ce:	4b0b      	ldr	r3, [pc, #44]	; (80012fc <SysTick_Handler+0x54>)
 80012d0:	2200      	movs	r2, #0
 80012d2:	605a      	str	r2, [r3, #4]
			STK -> VAL	= 0;
 80012d4:	4b09      	ldr	r3, [pc, #36]	; (80012fc <SysTick_Handler+0x54>)
 80012d6:	2200      	movs	r2, #0
 80012d8:	609a      	str	r2, [r3, #8]
	}
	SysTick_CallBack();
 80012da:	4b09      	ldr	r3, [pc, #36]	; (8001300 <SysTick_Handler+0x58>)
 80012dc:	681b      	ldr	r3, [r3, #0]
 80012de:	4798      	blx	r3
	/*	Clear Interrupt Flag by reading the Flag */
	Local_u8Temp	=	GET_BIT(STK -> CTRL , 16);
 80012e0:	4b06      	ldr	r3, [pc, #24]	; (80012fc <SysTick_Handler+0x54>)
 80012e2:	681b      	ldr	r3, [r3, #0]
 80012e4:	0c1b      	lsrs	r3, r3, #16
 80012e6:	b2db      	uxtb	r3, r3
 80012e8:	f003 0301 	and.w	r3, r3, #1
 80012ec:	71fb      	strb	r3, [r7, #7]
}
 80012ee:	bf00      	nop
 80012f0:	3708      	adds	r7, #8
 80012f2:	46bd      	mov	sp, r7
 80012f4:	bd80      	pop	{r7, pc}
 80012f6:	bf00      	nop
 80012f8:	2000002c 	.word	0x2000002c
 80012fc:	e000e010 	.word	0xe000e010
 8001300:	20000028 	.word	0x20000028

08001304 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001304:	480d      	ldr	r0, [pc, #52]	; (800133c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001306:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001308:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800130c:	480c      	ldr	r0, [pc, #48]	; (8001340 <LoopForever+0x6>)
  ldr r1, =_edata
 800130e:	490d      	ldr	r1, [pc, #52]	; (8001344 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001310:	4a0d      	ldr	r2, [pc, #52]	; (8001348 <LoopForever+0xe>)
  movs r3, #0
 8001312:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001314:	e002      	b.n	800131c <LoopCopyDataInit>

08001316 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001316:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001318:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800131a:	3304      	adds	r3, #4

0800131c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800131c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800131e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001320:	d3f9      	bcc.n	8001316 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001322:	4a0a      	ldr	r2, [pc, #40]	; (800134c <LoopForever+0x12>)
  ldr r4, =_ebss
 8001324:	4c0a      	ldr	r4, [pc, #40]	; (8001350 <LoopForever+0x16>)
  movs r3, #0
 8001326:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001328:	e001      	b.n	800132e <LoopFillZerobss>

0800132a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800132a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800132c:	3204      	adds	r2, #4

0800132e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800132e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001330:	d3fb      	bcc.n	800132a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001332:	f000 f811 	bl	8001358 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001336:	f7fe ff1b 	bl	8000170 <main>

0800133a <LoopForever>:

LoopForever:
  b LoopForever
 800133a:	e7fe      	b.n	800133a <LoopForever>
  ldr   r0, =_estack
 800133c:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8001340:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001344:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8001348:	080013c0 	.word	0x080013c0
  ldr r2, =_sbss
 800134c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8001350:	20000030 	.word	0x20000030

08001354 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001354:	e7fe      	b.n	8001354 <ADC1_2_IRQHandler>
	...

08001358 <__libc_init_array>:
 8001358:	b570      	push	{r4, r5, r6, lr}
 800135a:	2600      	movs	r6, #0
 800135c:	4d0c      	ldr	r5, [pc, #48]	; (8001390 <__libc_init_array+0x38>)
 800135e:	4c0d      	ldr	r4, [pc, #52]	; (8001394 <__libc_init_array+0x3c>)
 8001360:	1b64      	subs	r4, r4, r5
 8001362:	10a4      	asrs	r4, r4, #2
 8001364:	42a6      	cmp	r6, r4
 8001366:	d109      	bne.n	800137c <__libc_init_array+0x24>
 8001368:	f000 f81a 	bl	80013a0 <_init>
 800136c:	2600      	movs	r6, #0
 800136e:	4d0a      	ldr	r5, [pc, #40]	; (8001398 <__libc_init_array+0x40>)
 8001370:	4c0a      	ldr	r4, [pc, #40]	; (800139c <__libc_init_array+0x44>)
 8001372:	1b64      	subs	r4, r4, r5
 8001374:	10a4      	asrs	r4, r4, #2
 8001376:	42a6      	cmp	r6, r4
 8001378:	d105      	bne.n	8001386 <__libc_init_array+0x2e>
 800137a:	bd70      	pop	{r4, r5, r6, pc}
 800137c:	f855 3b04 	ldr.w	r3, [r5], #4
 8001380:	4798      	blx	r3
 8001382:	3601      	adds	r6, #1
 8001384:	e7ee      	b.n	8001364 <__libc_init_array+0xc>
 8001386:	f855 3b04 	ldr.w	r3, [r5], #4
 800138a:	4798      	blx	r3
 800138c:	3601      	adds	r6, #1
 800138e:	e7f2      	b.n	8001376 <__libc_init_array+0x1e>
 8001390:	080013b8 	.word	0x080013b8
 8001394:	080013b8 	.word	0x080013b8
 8001398:	080013b8 	.word	0x080013b8
 800139c:	080013bc 	.word	0x080013bc

080013a0 <_init>:
 80013a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013a2:	bf00      	nop
 80013a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013a6:	bc08      	pop	{r3}
 80013a8:	469e      	mov	lr, r3
 80013aa:	4770      	bx	lr

080013ac <_fini>:
 80013ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013ae:	bf00      	nop
 80013b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013b2:	bc08      	pop	{r3}
 80013b4:	469e      	mov	lr, r3
 80013b6:	4770      	bx	lr
